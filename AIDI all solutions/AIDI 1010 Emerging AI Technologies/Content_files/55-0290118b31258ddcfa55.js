(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{"2kFz":function(e,t,a){"use strict";var n=a("Llzl"),s=a("nbDY"),i=a.n(s),r=a("VdDF"),l=a("0JpG"),o=a("pjml"),d=a("wgY5"),c=a("e6jQ"),u=a("lEL+"),h=a("sP41"),p=a("zGdY");a.d(t,"c",(function(){return m})),a.d(t,"b",(function(){return D})),a.d(t,"a",(function(){return y}));const m="ultra.components.directives.calendar.repeatingEvent";class D extends i.a{constructor(e,t,a){super(t.toString()),this.handle=e,this.freq=t,this.freqLocalizedKey=a}}D.Daily=new D("Daily",p.r.Daily,"day"),D.Weekly=new D("Weekly",p.r.Weekly,"week"),D.Monthly=new D("Monthly",p.r.Monthly,"month");class y extends i.a{constructor(e,t,a){super(e),this.handle=e,this.selectedKey=t,this.localizedKey=a}}y.After=new y("After","AFTER","after"),y.OnDate=new y("On_date","UNTILDATE","onDate");const b=d(new Date(2015,1,15));class v{constructor(e,t,a,n,s,i){this.scope=e,this.element=t,this.attrs=a,this.form=n,this.localize=s,this.timeout=i,this.weekDaysCollection=o.g.RecurWeekDay.getValues().sort(((e,t)=>e.dayOfWeek-t.dayOfWeek)),this.byDayWraps=[],this.intervalWraps=[],this.freqFilters=[D.Daily,D.Weekly,D.Monthly],this.freqLabels={},this.endRepeatLabels={},this.endRepeatsCollection=y.getValues(),this.isOptionsDisabled=!1,this._isRepeatEvent=!1,this.repeatEventId=c.a(),this.untilDateId=`until-date-${c.a()}`,this.untilDateContainer=`container-${this.untilDateId}`,null!=this.scope.firstDayOfWeek&&this.scope.firstDayOfWeek>=0&&this.scope.firstDayOfWeek<=this.weekDaysCollection.length?this.firstDayOfWeek=Number(this.scope.firstDayOfWeek):this.firstDayOfWeek=o.g.RecurWeekDay.Sunday.dayOfWeek,this.byDayWraps=this.weekDaysCollection.map((e=>({checked:!1,weekDay:"",longWeekDay:""}))),s.loadBundle("components/directives/calendar/repeating-event").then((()=>i((()=>{this.initDropdowns(),e.isOptionsShown&&(this.isOptionsDisabled=e.isOptionsDisabled,this.element.find(".repeating-event-container").toggle("fast")),e.$watch("repeatingEvent.repeatUnit",((e,t)=>{e&&this.initIntervalWraps(),e!==t&&t&&this.updateRecurRules(),D.Weekly.isEqualTo(this.repeatUnit)&&this.updateByDayWraps()})),e.$watch("recurRules",((e,t)=>{this.isRepeatEvent=!!e,e&&(this.scope.recurRules.timeZoneId||(this.scope.recurRules.timeZoneId=r.a.getCurrentTimeZoneId()),this.updateRepeatUnit())})),e.$watch("repeatingEvent.isRepeatEvent",(e=>{e||(n["occurrence-count"].$invalid&&(n["occurrence-count"].$rollbackViewValue(),n["occurrence-count"].$setValidity("numberLarge",!0),n["occurrence-count"].$setValidity("smallLarge",!0),n["occurrence-count"].$setValidity("numberInvalid",!0)),n["until-date"].$invalid&&(n["until-date"].$rollbackViewValue(),n["until-date"].$setValidity("date",!0)))})),e.$watch("recurRules.endsBy",(e=>{e?(this.scope.recurRules.until=this.scope.recurRules.until||d(this.scope.startDate()).startOf("day").add({days:2}).subtract({minutes:1}).toDate(),n["occurrence-count"].$invalid&&n["occurrence-count"].$rollbackViewValue(),this.scope.recurRules.count=null,n["occurrence-count"].$setValidity("numberLarge",!0),n["occurrence-count"].$setValidity("smallLarge",!0),n["occurrence-count"].$setValidity("numberInvalid",!0)):this.scope.recurRules&&(n["until-date"].$invalid&&n["until-date"].$rollbackViewValue(),this.scope.recurRules.until=null,n["until-date"].$setValidity("date",!0),this.scope.recurRules.count=this.scope.recurRules.count||10)})),e.$watchCollection("recurRules.byWeekDay",(()=>{this.updateByDayWraps()})),e.$watch("recurRules.freq",(()=>this.updateRepeatUnit())),e.$watch("startDate().getTime()",(t=>{if(null!=t&&(this.startMoment=d(t),e.recurRules)){if(p.r.Weekly===e.recurRules.freq){const e=this.startMoment.day();if(null!=this.previousWeekDay&&this.previousWeekDay!==e){this.byDayWraps[this.previousWeekDay].checked&&this.checkByDay(this.previousWeekDay)}this.previousWeekDay=e;this.byDayWraps[e].checked||this.checkByDay(e)}else p.r.Monthly===e.recurRules.freq&&(e.recurRules.byMonthDay=this.startMoment.date());e.recurRules.endsBy&&e.recurRules.until&&this.startMoment.isAfter(e.recurRules.until)&&(e.recurRules.until=this.startMoment.clone().startOf("day").add({days:2}).subtract({minutes:1}).toDate())}})),e.$watch("startDate()",(t=>{e.recurRules&&(e.recurRules.until&&d(t).isAfter(e.recurRules.until)?e.recurRules.until=d(t).startOf("day").add({days:2}).subtract({minutes:1}).toDate():n["until-date"].$validate())})),e.$watch("recurRules.until.getTime()",(t=>{t&&(e.recurRules.until=d(t).startOf("day").add({days:1}).subtract({minutes:1}).toDate())})),n["until-date"].$validators.untilAfterStart=t=>!t||!d(t).isBefore(e.startDate())}),e,0,!0)))}generateIntervalLabel(e){const t="components.directives.calendar.repeatingEvent."+this.repeatUnit.freqLocalizedKey+"IntervalLabel.plural";return this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:t,params:{count:e}})}initIntervalWraps(){this.intervalWraps=[];for(let e=0;e<10;e++){const t=e+1,a=this.generateIntervalLabel(t);this.intervalWraps.push({interval:t,label:a})}const e=this.scope.recurRules.interval;if(e>10){const t=this.generateIntervalLabel(e);this.intervalWraps.push({interval:e,label:t})}}initDropdowns(){this.weekDaysCollection.forEach(((e,t)=>{const a=this.byDayWraps[t];a.weekDay=this.localize.formatDateSync(b.clone().add({days:e.dayOfWeek}).toDate(),l.ILocaleDateFormat.ShortWeekday,this.scope),a.longWeekDay=this.localize.formatDateSync(b.clone().add({days:e.dayOfWeek}).toDate(),l.ILocaleDateFormat.LongWeekday,this.scope)})),this.endRepeatsCollection.forEach((e=>{this.endRepeatLabels[e.localizedKey]=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"components.directives.calendar.repeatingEvent.endRepeatsCollection."+e.localizedKey})})),this.freqFilters.forEach((e=>{this.freqLabels[e.freqLocalizedKey]=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"components.directives.calendar.repeatingEvent.freqFilters."+e.freqLocalizedKey})}))}buildRecurRules(){return{freq:D.Weekly.freq.toString(),interval:1,endsBy:null,count:10,byWeekDay:[this.weekDaysCollection[this.scope.startDate().getDay()].toString()]}}updateRecurRules(){if(this.scope.recurRules)switch(this.scope.recurRules.interval>10&&(this.intervalWraps.pop(),this.scope.recurRules.interval=10),this.repeatUnit){case D.Daily:this.scope.recurRules.freq=D.Daily.freq,this.scope.recurRules.byWeekDay=null,this.scope.recurRules.monthRepeatBy=null,this.scope.recurRules.byDay=null,this.scope.recurRules.bySetPos=null,this.scope.recurRules.byMonthDay=null;break;case D.Weekly:{this.scope.recurRules.freq=D.Weekly.freq,this.scope.recurRules.byWeekDay=this.scope.recurRules.byWeekDay||[];const e=this.weekDaysCollection[this.scope.startDate().getDay()].handle;this.scope.recurRules.byWeekDay.indexOf(e)<0&&this.scope.recurRules.byWeekDay.push(e),this.scope.recurRules.monthRepeatBy=null,this.scope.recurRules.byDay=null,this.scope.recurRules.bySetPos=null,this.scope.recurRules.byMonthDay=null;break}case D.Monthly:this.scope.recurRules.freq=D.Monthly.freq,this.scope.recurRules.byWeekDay=null,this.scope.recurRules.monthRepeatBy=p.Db,this.scope.recurRules.byMonthDay=this.scope.startDate().getDate(),this.scope.recurRules.byDay=null,this.scope.recurRules.bySetPos=null}}toggle(){this.scope.recurRules&&(this.previousRecurRules=this.scope.recurRules),this.scope.recurRules=this.scope.recurRules?null:this.previousRecurRules||this.buildRecurRules()}checkByDay(e){this.byDayWraps[e].checked=!this.byDayWraps[e].checked,this.updateByDay(e),this.scope.$root.$broadcast("bb-autosave-save-trigger-debounce"),this.scope.$root.$broadcast("update-recur-rule-weekday")}updateByDay(e){const t=this.weekDaysCollection[e].handle,a=this.scope.recurRules.byWeekDay.indexOf(t);this.byDayWraps[e].checked?a<0&&this.scope.recurRules.byWeekDay.push(t):a>=0&&this.scope.recurRules.byWeekDay.splice(a,1),this.updateByDayWraps()}updateByDayWraps(){if(!this.scope.recurRules)return;const e=this.scope.recurRules.byWeekDay=this.scope.recurRules.byWeekDay||[];this.weekDaysCollection.forEach((t=>{this.byDayWraps[t.dayOfWeek].checked=e.indexOf(t.handle)>-1}));const t=this.scope.startDate().getDay();this.byDayWraps[t].checked&&(this.previousWeekDay=t)}updateRepeatUnit(){this.scope.recurRules&&(this.repeatUnit=D.parse(this.scope.recurRules.freq),this.repeatUnit?D.Weekly.isEqualTo(this.repeatUnit)&&this.updateByDayWraps():(this.scope.recurRules.interval=1,this.repeatUnit=D.Weekly,this.updateRecurRules()))}getRotatedDays(){const e=this.byDayWraps.slice();if(this.firstDayOfWeek&&this.byDayWraps.length>=this.firstDayOfWeek){let t=this.firstDayOfWeek;for(;t--;)e.push(e.shift())}return e}getIndexByWeekCollection(e){return null==e?e:(e+this.firstDayOfWeek)%this.weekDaysCollection.length}get endsBy(){return this.scope.recurRules&&this.scope.recurRules.endsBy===y.OnDate.selectedKey?y.OnDate.selectedKey:y.After.selectedKey}set endsBy(e){e&&(this.scope.recurRules.endsBy=e===y.OnDate.selectedKey?y.OnDate.selectedKey:null)}get isReadOnly(){return this.scope.disabled||this.isOptionsDisabled}get isRepeatEvent(){return this._isRepeatEvent}set isRepeatEvent(e){if(e=!!e,this._isRepeatEvent!==e){const t=this.element.find(".repeating-event-container");e?t.show("fast"):t.hide("fast"),this._isRepeatEvent=e}}}v.$inject=["scope","element","attrs","form",l.serviceName,u.b];class g{constructor(e){this.$injector=e,this.require="^form",this.restrict="E",this.template=h,this.scope={disabled:"=?ngDisabled",recurRules:"=",startDate:"&",isCheckboxHidden:"=?",isOptionsShown:"=?",isOptionsDisabled:"=?",analyticsIdTagPrefix:"@",firstDayOfWeek:"<?"},this.link=(e,t,a,n)=>{e.repeatingEvent=this.$injector.instantiate(v,{scope:e,element:t,attrs:a,form:n})}}}g.$inject=["$injector"],n.module(m,[u.a]).directive("bbRepeatingEvent",["$injector",e=>e.instantiate(g)])},"9hUw":function(e,t,a){"use strict";a.d(t,"a",(function(){return f})),a.d(t,"b",(function(){return P}));var n=a("D57K"),s=a("VdDF"),i=a("DN+C"),r=a("Llzl"),l=a("VAMW"),o=a("6fZB"),d=a("IbyE"),c=a("zGdY"),u=a("nsO7"),h=a("9OUN"),p=a("aHpC"),m=a("nmzr"),D=a("TnpK"),y=a("fYJU"),b=a("12mu"),v=a("0JpG"),g=a("Fvsw"),k=a("U50L"),E=a("aPUy");const f="ultra.components.services.assessment.peerReview",P="peerReview";let R=class{constructor(e,t,a,n,s,i,r,l,o,d,c){this.$rootScope=e,this.$ngRedux=t,this.localizeService=a,this.contextUser=n,this.modal=s,this.ultraState=i,this.context=r,this.$q=l,this.courseId=o,this.contentId=d,this.columnId=c,this.reviewableAttemptsOnly=[],this.deletedAttemptsOnly=[],this.hasLoadedReviewableAttempts=!1}initPeerContentObject(){this.subscribeToReduxStore();const{courseId:e,contentId:t,columnId:a}=this,n=[];return this.content||n.push(this.loadContents({courseId:e,contentId:t}).then((()=>this))),this.column||n.push(this.loadGradebookColumn({courseId:e,columnId:a}).then((()=>this))),this.$q.all(n).then((()=>this))}subscribeToReduxStore(){this.unsubscribeFromReduxStore=this.$ngRedux.connect((e=>{var t;const a=this.courseId,n=this.columnId,s=this.contextUser.userId;return{reviewableAttemptsOnly:Object(u.sortBy)(d.Yb.gradebookAttempt.getReviewableGradebookAttempts(e,a,n,s),["delegatedGraderOrder"]),deletedAttemptsOnly:d.Yb.gradebookAttempt.getDeletedReviewableGradebookAttempts(e,n),content:d.Yb.content.getContentById(e,this.contentId),column:d.Yb.gradebookColumn.getGradebookColumnById(e,n),assessmentHasEnoughSubmissions:null===(t=d.Yb.assessment.getAssessmentByContentId(e,this.contentId))||void 0===t?void 0:t.hasEnoughPeerSubmissions}}),(e=>Object(h.b)({assignNewAttemptForPeerReview:d.V.gradebookAttempt.assignNewAttemptForPeerReview,loadGradebookAttemptsByColumnId:d.V.gradebookAttempt.loadGradebookAttemptsByColumnId,loadGradebookColumn:d.V.gradebookColumn.loadGradebookColumn,loadContents:d.V.content.loadContents},e)))(this)}canPeerViewAttempt(e,t){if(!this.peerGrading||!t)return!1;const a=this.reviewableAttempts.some((e=>e.id===t.id)),n=this.contextUser.userId===t.userId;return!!(a||n)}canDelegatedReconcileAttempt(e){return e.delegatedGrading&&e.isUserReconciler(this.contextUser.userId)}canPeerReviewAttempt(e,t){return this.canPeerViewAttempt(e,t)&&t.userId!==this.contextUser.userId&&!this.canDelegatedReconcileAttempt(e)}canPeerAddFeedbackToAttempt(e,t){return this.canPeerReviewAttempt(e,t)&&!t.isReconciled()&&c.l.Completed!==t.status}get completedPeerReviews(){return this.peerGrading?this.reviewableAttempts.filter((e=>c.l.Completed===(null==e?void 0:e.status))).length:0}openNotEnoughStudentSubmissionsModal(){const e=this.$rootScope.$new();e.translateOpts={title:{key:"components.services.peer-review.modal.error-not-enough-submissions.title"}},e.descriptionKey="components.services.peer-review.modal.error-not-enough-submissions.description";const t={scope:e,template:k,resolve:{translations:[v.serviceName,e=>e.loadBundle("components/services/peer-review")]}};this.modal.open(t)}getReviewableAttemptByDelegatedGraderOrder(e){return this.reviewableAttempts.find((t=>t.delegatedGraderOrder===e))}assignNewPeerReview(){if(!this.peerGrading||this.reviewableAttempts.length===this.numOfPeerReviewsToComplete)return this.$q.resolve(null);const e=this.hasDeletedAttempts?this.deletedAttempts[0].delegatedGraderOrder:null;return this.$q.when(this.assignNewAttemptForPeerReview({courseId:this.column.courseId,columnId:this.column.id,userId:this.contextUser.userId})).then((()=>{const t=null!=e?e:this.reviewableAttempts.length-1;return Object(E.a)(this.$rootScope,{listIndex:t,reviewableAttempt:this.reviewableAttempts[t]}),this.reviewableAttempts[t]})).catch((e=>{throw e instanceof d.e&&this.openNotEnoughStudentSubmissionsModal(),e}))}navigateToPeerReview(e){if(!this.peerGrading)return this.$q.resolve();if(null===this.getReviewableAttemptByDelegatedGraderOrder(e))return this.$q.reject(new Error("Cannot navigate to a row that does not exist"));const t=this.getReviewableAttemptByDelegatedGraderOrder(e),a={courseId:this.column.courseId,columnId:this.column.id,userId:this.contextUser.userId,attemptId:null==t?void 0:t.id,gradeId:null==t?void 0:t.gradeId,initialPeerIndex:e};return this.ultraState.goPeekState(`${m.c.ASSESSMENT_PEER_GRADING}`,a)}loadReviewableAttempts(){var e;return!this.peerGrading||this.loadReviewableAttemptsPromise||this.hasLoadedReviewableAttempts?null!==(e=this.loadReviewableAttemptsPromise)&&void 0!==e?e:this.$q.resolve(this):(this.loadReviewableAttemptsPromise=this.$q.when(this.loadGradebookAttemptsByColumnId({courseId:this.column.courseId,columnId:this.column.id,reviewableAttemptsOnly:!0})).then((()=>(this.hasLoadedReviewableAttempts=!0,this))),this.loadReviewableAttemptsPromise)}get reviewableAttempts(){var e;return this.peerGrading&&null!==(e=this.reviewableAttemptsOnly)&&void 0!==e?e:[]}get deletedAttempts(){var e;return this.peerGrading&&null!==(e=this.deletedAttemptsOnly)&&void 0!==e?e:[]}get hasEnoughSubmissionsForPeerAssessment(){var e;return null!==(e=this.assessmentHasEnoughSubmissions)&&void 0!==e&&e}get hasDeletedAttempts(){return this.deletedAttempts.length>0}get numberOfLatePeerReviews(){return this.peerGrading?this.reviewableAttempts.filter((e=>this.isAfterPeerReviewDueDate(e.attemptLastGradedDate)&&c.l.Completed===e.status)).length:null}get numberOfStartedPeerReviews(){if(!this.peerGrading)return null;return this.reviewableAttempts.filter((e=>c.l.NeedsGrading===e.status)).length+this.deletedAttempts.length}get peerGrading(){var e;return!!(null===(e=this.column)||void 0===e?void 0:e.peerGrading)}get numOfPeerReviewsToComplete(){var e;return this.peerGrading?null===(e=this.content.peerSettings)||void 0===e?void 0:e.peerReviewsPerStudent:null}parseCurrentStringToDateAndMemoize(e){return s.a.parseStringToDate(e)}get peerSubmissionDueDate(){return this.peerGrading?this.parseCurrentStringToDateAndMemoize(this.column.dueDate):null}get peerReviewDueDate(){var e;return this.peerGrading?this.parseCurrentStringToDateAndMemoize(null===(e=this.content.peerSettings)||void 0===e?void 0:e.peerReviewDueDate):null}get allowLatePeerReviews(){return!!this.peerGrading&&!!this.content.peerSettings.allowLatePeerReviews}get isPeerGradingConfigured(){return!!this.peerGrading&&(null!=this.numOfPeerReviewsToComplete&&null!=this.peerReviewDueDate)}get isInPeerReviewWindow(){return!this.isAfterPeerReviewDueDate()&&this.isAfterPeerSubmissionDueDate()}get isAfterPeerReviewWindow(){return this.isAfterPeerReviewDueDate()}isAfterPeerReviewDueDate(e){var t;if(!this.peerGrading)return!1;const a=null!==(t=s.a.parseStringToDate(e))&&void 0!==t?t:new Date;return s.a.isWithinDateRange(a,{end:null,start:this.peerReviewDueDate},!1)}isAfterPeerSubmissionDueDate(e){var t;if(!this.peerGrading)return!1;const a=null!==(t=s.a.parseStringToDate(e))&&void 0!==t?t:new Date;return s.a.isWithinDateRange(a,{end:null,start:this.peerSubmissionDueDate},!1)}};Object(n.a)([Object(i.LRUMemoize)()],R.prototype,"parseCurrentStringToDateAndMemoize",null),R=Object(n.a)([Object(n.c)(0,Object(p.b)("$rootScope")),Object(n.c)(1,Object(p.b)("$ngRedux")),Object(n.c)(2,Object(p.b)(v.serviceName)),Object(n.c)(3,Object(p.b)(y.b)),Object(n.c)(4,Object(p.b)(b.b)),Object(n.c)(5,Object(p.b)(D.d)),Object(n.c)(6,Object(p.b)(g.b)),Object(n.c)(7,Object(p.b)("$q")),Object(n.c)(8,Object(p.b)("courseId")),Object(n.c)(9,Object(p.b)("contentId")),Object(n.c)(10,Object(p.b)("columnId"))],R);class A{constructor(e){this.service=e,this.key=l.d.PeerReview}getOrCreatePeerContentFromContent(e){return Object(o.a)(this.service.getOrCreatePeerContentFromContent(e))}}let w=class{constructor(e,t,a){this.$injector=e,this.$q=t,this.localizeService=a,this.peerContentMap=new Map,Object(l.f)(new A(this))}getPeerContent(e){return this.peerContentMap.get(e)}createPeerContent(e,t,a){const n=this.$injector.instantiate(R,{courseId:e,contentId:t,columnId:a});return this.peerContentMap.set(t,n),n.initPeerContentObject()}getOrCreatePeerContent(e,t,a){const n=this.getPeerContent(t);return n?this.$q.resolve(n):this.createPeerContent(e,t,a)}getDeployedAssessment(e){return(null==e?void 0:e.contentDetail)&&e.getDeployedAssessment()}getOrCreatePeerContentFromContent(e){var t,a;if(!e)return this.$q.resolve(null);const{courseId:n,id:s}=e,i=null===(a=null===(t=this.getDeployedAssessment(e))||void 0===t?void 0:t.gradingColumn)||void 0===a?void 0:a.id;return n&&s&&i?this.getOrCreatePeerContent(n,s,i):this.$q.resolve(null)}getOrCreatePeerContentWithAttemptsFromContent(e){return this.getOrCreatePeerContentFromContent(e).then((e=>null==e?void 0:e.loadReviewableAttempts()))}getOrCreatePeerContentFromColumn(e){if(!e)return this.$q.resolve(null);const{courseId:t,contentId:a,id:n}=e;return t&&a&&n?this.getOrCreatePeerContent(t,a,n):this.$q.resolve(null)}getOrCreatePeerContentWithAttemptsFromColumn(e){return this.getOrCreatePeerContentFromColumn(e).then((e=>null==e?void 0:e.loadReviewableAttempts()))}isPeerEvaluationItem(e){return d.O.PeerEvaluationTest.isEqualTo(e)}wrapPeerEvaluationItemTitle(e,t){return this.localizeService.translateSync({locale:t,key:"components.services.peer-review.peerEvaluationTitleWrapper",params:{itemTitle:e},noWrap:!0,noEscape:!0})}};w=Object(n.a)([Object(n.c)(0,Object(p.b)("$injector")),Object(n.c)(1,Object(p.b)("$q")),Object(n.c)(2,Object(p.b)(v.serviceName))],w);r.module(f,[v.moduleName,y.a,b.a,D.b,g.a]).service(P,w)},MV2l:function(e,t,a){"use strict";a.d(t,"a",(function(){return D}));var n=a("D57K"),s=a("Llzl"),i=a("wgY5"),r=a("aHpC"),l=a("IbyE"),o=a("0JpG"),d=a("Fvsw"),c=a("gZZS"),u=a("hqh6"),h=a("lEL+"),p=a("e6jQ"),m=a("wdH8");const D="ultra.components.directives.calendar.startEndAllDay";let y=class{constructor(e,t,a,n,s,r,l){this.$ngRedux=e,this.scope=t,this.element=a,this.attrs=n,this.context=s,this.timeout=r,this.bbLocalize=l,this.isFromEndDateChanged=!1,this.isFromStartDateChanged=!1,this.isDefaultDateApplied=!1,this.subscribeToReduxChanges();const d=this.bbLocalize.getAppLocaleISO();this.getLocaleSettings({locale:d});const c=Object(p.a)();this.inputDatesIds={startDate:`start-date-${c}`,endDate:`end-date-${c}`,allDayStartDate:`all-day-start-day-${c}`,allDayEndDate:`all-day-end-day-${c}`,dueDate:`due-date-${c}`},this.inputDatesContainers={...this.inputDatesIds},Object.keys(this.inputDatesIds).forEach((e=>{this.inputDatesContainers[e]=this.inputDatesContainers[e]+"-container"})),this.allDayId=Object(p.a)();const u=i(s.getServerTime()).startOf("hour").add({hours:1}).hours();let h;t.startDate&&(this.formattedStartTimePlaceholderValue=this.bbLocalize.formatTimeSync(t.startDate,o.ILocaleTimeFormat.Short)),t.endDate&&(this.formattedEndTimePlaceholderValue=this.bbLocalize.formatTimeSync(t.endDate,o.ILocaleTimeFormat.Short)),t.$watch("isRepeatEvent",(e=>{if(e&&t.startDate){const e=i(t.startDate);t.isAllDay?t.endDate=e.clone().add({days:1}).subtract({minutes:1}).toDate():t.endDate&&e.isSame(t.endDate,"day")||(t.endDate=this.updateEndDate(e.clone())),e.isSame(t.endTimePickerPlaceholderValue,"day")||(t.endTimePickerPlaceholderValue=this.updateEndDate(e.clone()))}else e||(!t.isStartTimeEmpty&&t.isEndTimeEmpty&&23===i(this.startTimePickerValue).hours()?(t.endTimePickerPlaceholderValue=i(this.startTimePickerValue).clone().add({hours:1}).toDate(),this.endDatePickerValue=t.endTimePickerPlaceholderValue):t.isStartTimeEmpty&&!t.isEndTimeEmpty&&0===i(this.endTimePickerValue).hours()?(t.startTimePickerPlaceholderValue=i(this.endTimePickerValue).clone().subtract({hours:1}).toDate(),this.startDatePickerValue=t.startTimePickerPlaceholderValue):t.isStartTimeEmpty||t.isEndTimeEmpty||(t.endTimePickerPlaceholderValue=i(this.startTimePickerValue).clone().add({hours:1}).toDate(),t.startTimePickerPlaceholderValue=i(this.endTimePickerValue).clone().subtract({hours:1}).toDate()))})),t.$watch("startDate.getTime()",(e=>{if(null!=e){const a=i(e);this.startDatePickerValue=a.toDate(),this.allDayStartDatePickerValue=a.toDate(),t.isAllDay&&(this.startTimePickerValue?this.startTimePickerValue=i(this.startTimePickerValue).year(a.year()).month(a.month()).date(a.date()).toDate():this.startTimePickerValue=i(e).startOf("hour").hours(u).toDate()),this.startTimePickerValue&&t.isAllDay?this.startTimePickerValue=i(this.startTimePickerValue).year(a.year()).month(a.month()).date(a.date()).toDate():t.isStartTimeEmpty&&!t.isEndTimeEmpty||i(e).isSame(this.startTimePickerValue,"minute")||(this.startTimePickerValue=new Date(e)),this.isDefaultDateApplied||(this.isDefaultDateApplied=!0,h&&(h(),h=null)),t.isDueDate&&t.isDueDate()?t.endDate=new Date(e):this.isFromEndDateChanged||(t.endDate&&a.isBefore(t.endDate,"minute")?t.isRepeatEvent&&!a.isSame(t.endDate,"day")&&(t.endDate=this.updateEndDate(a.clone())):t.isAllDay?t.endDate=a.clone().add({days:1}).subtract({minutes:1}).toDate():(t.isRepeatEvent?t.endDate=this.updateEndDate(a.clone()):t.endDate=a.clone().add({hours:1}).toDate(),this.isFromStartDateChanged=!0))}this.isFromEndDateChanged=!1})),t.$watch("endDate.getTime()",(e=>{if(null!=e){const a=i(e);this.endDatePickerValue=a.toDate(),this.allDayEndDatePickerValue=a.toDate(),t.isAllDay&&(this.endTimePickerValue?this.endTimePickerValue=i(this.endTimePickerValue).year(a.year()).month(a.month()).date(a.date()).toDate():this.endTimePickerValue=i(e).startOf("hour").hours(u).add({hours:1}).toDate()),this.endTimePickerValue&&t.isAllDay?this.endTimePickerValue=i(this.endTimePickerValue).year(a.year()).month(a.month()).date(a.date()).toDate():t.isEndTimeEmpty&&!t.isStartTimeEmpty||i(e).isSame(this.endTimePickerValue,"minute")||(this.endTimePickerValue=new Date(e)),t.isDueDate&&t.isDueDate()?t.startDate=new Date(e):this.isFromStartDateChanged||(t.startDate&&a.isAfter(t.startDate,"minute")?t.isRepeatEvent&&!a.isSame(t.startDate,"day")&&(this.scope.startDate=this.updateStartDate(a.clone()),this.isFromEndDateChanged=!0):t.isAllDay?t.startDate=a.add({minutes:1}).subtract({days:1}).toDate():(this.scope.isRepeatEvent?this.scope.startDate=this.updateStartDate(a.clone()):this.scope.startDate=a.clone().subtract({hours:1}).toDate(),this.isFromEndDateChanged=!0))}this.isFromStartDateChanged=!1})),h=t.$watch("defaultDate()",(e=>{if(e){if(!this.isDefaultDateApplied){this.isDefaultDateApplied=!0;const t=i(e).startOf("hour").hours(u);this.scope.startDate=t.toDate(),this.scope.endDate=t.clone().add({hours:1}).toDate()}h&&(h(),h=null)}})),t.$watch("startEndAllDay.startDatePickerValue.getTime()",(e=>{null!=e&&(t.startDate=new Date(e),this.setYearMonthDate(this.startTimePickerValue,t.startDate))})),t.$watch("startEndAllDay.endDatePickerValue.getTime()",(e=>{null!=e&&(t.endDate=new Date(e),this.setYearMonthDate(this.endTimePickerValue,t.endDate))})),t.$watch("startEndAllDay.startTimePickerValue.getTime()",(e=>{null!=e&&(t.isRepeatEvent?t.endTimePickerPlaceholderValue=this.updateEndDate(i(e).clone()):t.endTimePickerPlaceholderValue=i(e).clone().add({hours:1}).toDate(),t.isEndTimeEmpty?((i(this.endDatePickerValue).isSame(t.endTimePickerPlaceholderValue,"day")||23===i(e).clone().hours()&&i(this.startDatePickerValue).isSame(this.endDatePickerValue,"day")||i(e).isAfter(this.endDatePickerValue))&&(this.isFromStartDateChanged=!0,this.setYearMonthDate(this.endDatePickerValue,t.endTimePickerPlaceholderValue)),t.startTimePickerPlaceholderValue=i(e).clone().toDate()):t.isStartTimeEmpty&&(this.isFromStartDateChanged=!0,this.setYearMonthDate(t.startTimePickerPlaceholderValue,i(e).toDate()),0===this.endDatePickerValue.getHours()&&i(this.endDatePickerValue).isBefore(t.startTimePickerPlaceholderValue)?this.setYearMonthDate(this.endDatePickerValue,i(this.startDatePickerValue).add({days:1}).toDate()):i(this.endDatePickerValue).isBefore(t.endTimePickerPlaceholderValue,"day")&&this.setYearMonthDate(this.endDatePickerValue,this.startDatePickerValue)),t.isAllDay||(t.startDate=new Date(e),t.startTimePickerPlaceholderValue=t.startDate))})),t.$watch("startEndAllDay.endTimePickerValue.getTime()",(e=>{null!=e&&(t.isRepeatEvent?t.startTimePickerPlaceholderValue=this.updateStartDate(i(e).clone()):t.startTimePickerPlaceholderValue=i(e).clone().subtract({hours:1}).toDate(),t.isStartTimeEmpty?((i(this.startDatePickerValue).isSame(t.startTimePickerPlaceholderValue,"day")||0===i(e).clone().hours()&&i(this.startDatePickerValue).isSame(this.endDatePickerValue,"day")||i(e).isBefore(this.startDatePickerValue))&&(this.isFromEndDateChanged=!0,this.setYearMonthDate(this.startDatePickerValue,t.startTimePickerPlaceholderValue)),t.endTimePickerPlaceholderValue=i(e).clone().toDate()):t.isEndTimeEmpty&&(this.isFromEndDateChanged=!0,this.setYearMonthDate(t.endTimePickerPlaceholderValue,i(e).toDate()),23===this.startDatePickerValue.getHours()&&i(this.startDatePickerValue).isAfter(t.endTimePickerPlaceholderValue)?this.setYearMonthDate(this.startDatePickerValue,i(this.endDatePickerValue).subtract({days:1}).toDate()):i(this.startDatePickerValue).isAfter(t.startTimePickerPlaceholderValue,"day")&&this.setYearMonthDate(this.startDatePickerValue,this.endDatePickerValue)),t.isAllDay||(t.endDate=new Date(e),t.endTimePickerPlaceholderValue=t.endDate))})),this.scope.$watch("startTimePickerPlaceholderValue",(()=>{const e=this.scope.startTimePickerPlaceholderValue||i().toDate();this.formattedStartTimePlaceholderValue=this.bbLocalize.formatTimeSync(e,o.ILocaleTimeFormat.Short)})),this.scope.$watch("endTimePickerPlaceholderValue",(()=>{const e=this.scope.startTimePickerPlaceholderValue||i().toDate();this.formattedEndTimePlaceholderValue=this.bbLocalize.formatTimeSync(e,o.ILocaleTimeFormat.Short)})),t.onTimePickerValueCleared=(e,a)=>{t.$broadcast("time-view-value-is-empty",e,a)},t.$on("time-view-value-is-empty",((e,n,s)=>{const r=a.find("input#all-day-"+this.allDayId);"start-time"===n?(s&&t.isEndTimeEmpty&&(t.isAllDay=!0,r.focus()),t.isStartTimeEmpty=s,s&&(this.isFromEndDateChanged=!0,i(this.endDatePickerValue).isSame(this.startDatePickerValue,"day")&&0===i(this.endTimePickerValue).hours()&&(this.startDatePickerValue=t.startTimePickerPlaceholderValue))):"end-time"===n&&(s&&t.isStartTimeEmpty&&(t.isAllDay=!0,r.focus()),t.isEndTimeEmpty=s,s&&(this.isFromStartDateChanged=!0,i(this.endDatePickerValue).isSame(this.startDatePickerValue,"day")&&23===i(this.startTimePickerValue).hours()&&(this.endDatePickerValue=t.endTimePickerPlaceholderValue)))})),t.$watch("startEndAllDay.allDayStartDatePickerValue.getTime()",(e=>{null!=e&&t.isAllDay&&(t.startDate=i(e).startOf("day").toDate())})),t.$watch("startEndAllDay.allDayEndDatePickerValue.getTime()",(e=>{null!=e&&t.isAllDay&&(t.endDate=i(e).startOf("day").add({days:1}).subtract({minutes:1}).toDate())})),t.$watch("isAllDay",((e,a)=>{null!=e&&e!==a&&(e?(this.allDayStartDatePickerValue&&(t.startDate=i(this.allDayStartDatePickerValue).startOf("day").toDate()),this.allDayEndDatePickerValue&&(t.endDate=i(this.allDayEndDatePickerValue).startOf("day").add({days:1}).subtract({minutes:1}).toDate())):(this.startTimePickerValue&&(t.startDate=new Date(this.startTimePickerValue.getTime()),t.isStartTimeEmpty=!1),this.endTimePickerValue&&(t.endDate=new Date(this.endTimePickerValue.getTime()),t.isEndTimeEmpty=!1)))}))}updateStartDate(e){return 0===e.hours()&&0!==e.minutes()?e.minutes(0).toDate():e.subtract({hours:1}).toDate()}updateEndDate(e){return 23===e.hours()&&59!==e.minutes()?e.minutes(59).toDate():e.add({hours:1}).toDate()}setYearMonthDate(e,t){e.setFullYear(t.getFullYear()),e.setDate(1),e.setMonth(t.getMonth()),e.setDate(t.getDate())}subscribeToReduxChanges(){const e=this.$ngRedux.connect((e=>({localeSettings:l.Yb.locale.getLocaleSettings(e,this.bbLocalize.getAppLocaleISO())})),(e=>({getLocaleSettings:t=>e(l.V.locale.getLocaleSettings(t))})))(this);this.scope.$on("$destroy",e)}};y=Object(n.a)([Object(n.c)(0,Object(r.b)("$ngRedux")),Object(n.c)(1,Object(r.b)("scope")),Object(n.c)(2,Object(r.b)("element")),Object(n.c)(3,Object(r.b)("attrs")),Object(n.c)(4,Object(r.b)(d.b)),Object(n.c)(5,Object(r.b)(h.b)),Object(n.c)(6,Object(r.b)(o.serviceName))],y);class b{constructor(e){this.$injector=e,this.restrict="AE",this.template=m,this.scope={startDate:"=",endDate:"=",disabled:"=?ngDisabled",isAllDay:"=",isRepeatEvent:"=",defaultDate:"&",isDueDate:"&?",startTimePickerPlaceholderValue:"=?",endTimePickerPlaceholderValue:"=?",isStartTimeEmpty:"=?",isEndTimeEmpty:"=?",analyticsIdTagPrefix:"@"},this.link=(e,t,a)=>{e.startEndAllDay=this.$injector.instantiate(y,{scope:e,element:t,attrs:a})}}}b.$inject=["$injector"],s.module(D,[d.a,o.moduleName,c.a,u.a,h.a]).directive("bbStartEndAllDay",["$injector",e=>e.instantiate(b)])},U50L:function(e,t){e.exports='<bb-modal id="notification-modal-api-error"\n          class="notification"\n          modal-aria-type="alertdialog"\n          modal-translate-options="translateOpts"\n          analytics-id-tag-prefix="components.services.error-modal.error-not-enough-submissions">\n  <div name="modal-contents">\n    <p bb-translate>{{::descriptionKey}}</p>\n  </div>\n  <button name="modal-footer-button-primary"\n          ng-click="$parent.$dismiss()"\n          class="button js-primary-button"\n          bb-translate\n          analytics-id="components.services.error-modal.dismiss">components.services.error-modal.dismiss</button>\n</bb-modal>\n'},aPUy:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return i}));const n="peer-review-assigned";function s(e,t){return e.$broadcast(n,t.listIndex,t.reviewableAttempt)}function i(e,t){return e.$on(n,t)}},gZZS:function(e,t,a){"use strict";a.d(t,"a",(function(){return h}));var n=a("D57K"),s=a("ERkP"),i=a("7nmT"),r=a("AuQm"),l=a("yC9S"),o=a("aHpC"),d=a("4JTD"),c=a("0JpG"),u=a("tN4z");const h="ultra.components.directives.timePicker",p=angular.module(h,[c.moduleName]);let m=class{constructor(e,t,a){this.$scope=e,this.$element=t,this.localizeService=a,this.isValid=!0,this.onChange=(e,t)=>{t?(this.onViewValueCleared&&this.onViewValueCleared(this.ngModel.$name,this.ngModel.$isEmpty(e)),this.ngModel.$setViewValue(e),this.render()):this.ngModel.$setPristine()},this.onValidate=e=>{this.isValid=e,this.invalidValidationKey&&this.ngModel.$setValidity(this.invalidValidationKey,e),this.render()},this.render=()=>{const{analyticsId:e,errorEmptyMessage:t,disabled:a,readonly:n,placeholder:l,ngModel:o}=this,c={onDateTimeChanging(){},onChangeValue:e=>this.onChange(e,e!==o.$viewValue),analyticsId:e,value:o.$viewValue,onValidateCallback:this.onValidate,isValueValid:this.isValid,errorFormatMessage:this.errorFormatMessage,errorEmptyMessage:t,disabled:a,readonly:n,placeholder:l,ariaLabel:this.$element.attr("aria-label")},{locale:h,babelfishInstance:p,babelfishFormatter:m,isRtl:D}=this.localizeService.getReactBabelfishParams(this.$scope);i.render(s.createElement(d.a,{babelfishFormatInstance:m,babelfishInstance:p,locale:h,isRtl:D},s.createElement(u.AnalyticsJssThemeProvider,{isRtl:this.localizeService.isRTL(this.$scope)},s.createElement(r.W,{...c}))),this.$element[0])}}$postLink(){this.render()}$onChanges(){this.render()}$onDestroy(){i.unmountComponentAtNode(this.$element[0])}$onInit(){this.ngModel.$render=()=>this.render()}};m=Object(n.a)([Object(l.a)({module:p,componentName:"bbTimePicker",bindings:{analyticsId:"@",errorFormatMessage:"@?",errorEmptyMessage:"@?",disabled:"<?",readonly:"<?",name:"@?",onViewValueCleared:"<?",placeholder:"@?",invalidValidationKey:"@?"},require:{ngModel:"ngModel"}}),Object(n.c)(0,Object(o.b)("$scope")),Object(n.c)(1,Object(o.b)("$element")),Object(n.c)(2,Object(o.b)(c.serviceName))],m)},sP41:function(e,t){e.exports='<div class="repeating-event-block" bb-load-bundle="components/directives/calendar/repeating-event">\n  \x3c!--Rep Frequency--\x3e\n  <div ng-if="::!isCheckboxHidden" class="row collapse repeating-event-control">\n    <div class="inline-form-row row collapse">\n      <div class="columns">\n        <input id="repeat-event-{{::repeatingEvent.repeatEventId}}"\n               name="repeat-event"\n               ng-disabled="disabled"\n               ng-model="repeatingEvent.isRepeatEvent"\n               type="checkbox"\n               ng-click="repeatingEvent.toggle()"\n               analytics-id="{{::analyticsIdTagPrefix}}.repeatingEvent.repeatEvent.input">\n        <label for="repeat-event-{{::repeatingEvent.repeatEventId}}" bb-translate>components.directives.calendar.repeatingEvent.repeatEvent</label>\n      </div>\n    </div>\n  </div>\n  \x3c!--Repeating Event Container--\x3e\n  <div class="panel-block input-block hide repeating-event-container">\n    <div class="side-by-side-selects row collapse">\n      <div class="columns small-6">\n        <div>\n          <select name="choose-event-repetition-select"\n                  ng-model="repeatingEvent.repeatUnit"\n                  ng-disabled="repeatingEvent.isReadOnly"\n                  ng-options="repeatingEvent.freqLabels[freqFilter.freqLocalizedKey] for freqFilter in repeatingEvent.freqFilters"\n                  bb-translate-attrs="{\'aria-label\': \'components.directives.calendar.repeatingEvent.repeatFrequency\'}"\n                  analytics-id="{{::analyticsIdTagPrefix}}.repeatingEvent.repeatFrequency.select">\n          </select>\n        </div>\n      </div>\n      <div class="columns small-6">\n        <select name="event-repetition-number-select"\n                ng-model="recurRules.interval"\n                ng-disabled="repeatingEvent.isReadOnly"\n                ng-options="intervalWrap.interval as intervalWrap.label for intervalWrap in repeatingEvent.intervalWraps"\n                bb-translate-attrs="{\'aria-label\': \'components.directives.calendar.repeatingEvent.repeatInterval\'}"\n                analytics-id="{{::analyticsIdTagPrefix}}.repeatingEvent.repeatInterval.select">\n        </select>\n      </div>\n    </div>\n\n    \x3c!--weekly repetition--\x3e\n    <div class="weekly-rep" ng-show="repeatingEvent.repeatUnit.toString() === \'WEEKLY\'">\n      <ul class="small-block-grid-8 days-block-grid" name="weekdays" ng-model="repeatingEvent.byDayWraps">\n        <li ng-repeat="byDayWrap in repeatingEvent.getRotatedDays() track by $index">\n          <button class="button icon small"\n                  ng-class="{\'on\': byDayWrap.checked}"\n                  ng-click="repeatingEvent.checkByDay(repeatingEvent.getIndexByWeekCollection($index))"\n                  ng-disabled="repeatingEvent.isReadOnly || repeatingEvent.getIndexByWeekCollection($index) === startDate().getDay()"\n                  aria-label="{{ byDayWrap.longWeekDay }}"\n                  aria-pressed="{{ byDayWrap.checked }}"\n                  analytics-id="{{::analyticsIdTagPrefix}}.repeatingEvent.{{repeatingEvent.getIndexByWeekCollection($index)}}.button">\n            {{byDayWrap.weekDay}}\n          </button>\n        </li>\n      </ul>\n    </div>\n\n    \x3c!--end repeat--\x3e\n    <div class="date-time-inputs row collapse">\n      <div class="columns" ng-class="{\'small-8\': recurRules.endsBy !== \'UNTILDATE\', \'small-6\': recurRules.endsBy === \'UNTILDATE\'}">\n        <select name="choose-end-repeat-select"\n                ng-model="repeatingEvent.endsBy"\n                ng-disabled="repeatingEvent.isReadOnly"\n                ng-options="endRepeat.selectedKey as repeatingEvent.endRepeatLabels[ endRepeat.localizedKey ] for endRepeat in repeatingEvent.endRepeatsCollection"\n                bb-translate-attrs="{\'aria-label\': \'components.directives.calendar.repeatingEvent.endRepeatMethod\'}"\n                analytics-id="{{::analyticsIdTagPrefix}}.repeatingEvent.endRepeatMethod.select">\n        </select>\n      </div>\n      <div class="columns small-4" ng-show="recurRules.endsBy !== \'UNTILDATE\'">\n        <div class="choose-event-repetition-occurrence">\n          <label class="sr-only" for="occurrence-count" bb-translate>components.directives.calendar.repeatingEvent.occurrences</label>\n          <input type="text"\n                 max="100"\n                 min="1"\n                 max-decimal="0"\n                 id="occurrence-count"\n                 name="occurrence-count"\n                 ng-model="recurRules.count"\n                 ng-disabled="repeatingEvent.isReadOnly"\n                 bb-validate-number\n                 ng-required="recurRules && recurRules.endsBy !== \'UNTILDATE\'"\n                 analytics-id="{{::analyticsIdTagPrefix}}.repeatingEvent.occurrences.input">\n        </div>\n      </div>\n      <div class="columns small-6" ng-show="recurRules.endsBy === \'UNTILDATE\'">\n        <div class="choose-event-end-date-wrapper {{::repeatingEvent.untilDateContainer}}">\n          <label class="sr-only" for="until-date" bb-translate>components.directives.calendar.repeatingEvent.endDate</label>\n          <input id={{::repeatingEvent.untilDateId}}\n                 name="until-date"\n                 bb-date-picker\n                 orientation="auto right"\n                 container=".{{::repeatingEvent.untilDateContainer}}"\n                 first-day-of-week="repeatingEvent.firstDayOfWeek"\n                 ng-model="recurRules.until"\n                 ng-model-options="{ allowInvalid: true }"\n                 ng-disabled="repeatingEvent.isReadOnly"\n                 type="text"\n                 ng-required="recurRules && recurRules.endsBy === \'UNTILDATE\'"\n                 analytics-id="{{::analyticsIdTagPrefix}}.repeatingEvent.endDate.input">\n        </div>\n      </div>\n    </div>\n    <div bb-validation-messages for="occurrence-count"></div>\n    <div bb-validation-messages for="until-date">\n      <span ng-message="untilAfterStart"><span bb-translate>components.directives.calendar.repeatingEvent.error.untilBeforeStart</span></span>\n      <span ng-message="untilAfterStartOnsubmit"><span bb-translate>components.directives.calendar.repeatingEvent.error.untilBeforeStart</span></span>\n    </div>\n  </div>\n</div>\n'},wdH8:function(e,t){e.exports='<div bb-load-bundle="components/directives/calendar/start-end-all-day">\n  \x3c!--Start/End Date Event--\x3e\n  <div class="row collapse start-end-date-event" ng-show="!isAllDay && !isDueDate()">\n\n    \x3c!--Start Date--\x3e\n    <label ng-show="isRepeatEvent" bb-translate>components.directives.calendar.startEndAllDay.firstDayLabel</label>\n    <label bb-form-label-decorator\n           for="{{startEndAllDay.inputDatesIds.startDate}}"\n           class="show-labels"\n           bb-translate\n           bb-translate-attrs="{\'aria-label\':\'components.directives.calendar.startEndAllDay.start\'}">\n      components.directives.calendar.startEndAllDay.start\n    </label>\n    <div class="date-time-inputs row collapse">\n      <div class="columns small-6 {{startEndAllDay.inputDatesContainers.startDate}}">\n        <label class="sr-only" for="{{startEndAllDay.inputDatesIds.startDate}}" bb-translate>components.directives.calendar.startEndAllDay.startDate</label>\n        <input id="{{startEndAllDay.inputDatesIds.startDate}}"\n               name="start-date"\n               ng-disabled="disabled"\n               bb-date-picker\n               first-day-of-week="startEndAllDay.localeSettings.calendar.firstDayOfWeek"\n               orientation="auto left"\n               container=".{{startEndAllDay.inputDatesContainers.startDate}}"\n               ng-model="startEndAllDay.startDatePickerValue"\n               ng-required="true"\n               analytics-id="{{analyticsIdTagPrefix}}.startEndAllDay.startDate.input">\n      </div>\n      <div class="columns small-6">\n        <bb-time-picker\n          name="start-time"\n          analytics-id="{{analyticsIdTagPrefix}}.startEndAllDay.endTime.input"\n          invalid-validation-key="time"\n          ng-model="startEndAllDay.startTimePickerValue"\n          disabled="disabled"\n          placeholder="{{startEndAllDay.formattedStartTimePlaceholderValue}}"\n          bb-translate-attrs="{\'aria-label\': \'components.directives.calendar.startEndAllDay.startTime\'}"\n          on-view-value-cleared="onTimePickerValueCleared"\n        >\n        </bb-time-picker>\n      </div>\n    </div>\n\n    <div bb-validation-messages for="start-date">\n      <span ng-message="required"><bb-translate>components.directives.calendar.startEndAllDay.error.startDateEmptyError</bb-translate></span>\n    </div>\n    <div bb-validation-messages for="start-time">\n      <span ng-message="time"><span bb-translate>components.directives.validation.messages.errors.time</span></span>\n    </div>\n\n    \x3c!--End Date--\x3e\n    <label bb-form-label-decorator\n           for="{{startEndAllDay.inputDatesIds.endDate}}"\n           ng-show="!isRepeatEvent"\n           class="show-labels"\n           bb-translate\n           bb-translate-attrs="{\'aria-label\':\'components.directives.calendar.startEndAllDay.end\'}">\n      components.directives.calendar.startEndAllDay.end\n    </label>\n\n    <label bb-form-label-decorator\n           for="{{startEndAllDay.inputDatesIds.endDate}}"\n           ng-show="isRepeatEvent"\n           class="show-labels"\n           bb-translate\n           bb-translate-attrs="{\'aria-label\':\'components.directives.calendar.startEndAllDay.end\'}">\n      components.directives.calendar.startEndAllDay.end\n    </label>\n    <div class="row collapse date-time-inputs">\n      <div class="columns small-6 {{startEndAllDay.inputDatesContainers.endDate}}" ng-class="{\'invisible\' : isRepeatEvent}">\n        <label class="sr-only" for="end-date" bb-translate>components.directives.calendar.startEndAllDay.endDate</label>\n        <input id="{{startEndAllDay.inputDatesIds.endDate}}"\n               name="end-date"\n               ng-disabled="disabled"\n               bb-date-picker\n               orientation="auto left"\n               container=".{{startEndAllDay.inputDatesContainers.endDate}}"\n               first-day-of-week="startEndAllDay.localeSettings.calendar.firstDayOfWeek"\n               ng-model="startEndAllDay.endDatePickerValue"\n               ng-required="true"\n               type="text"\n               analytics-id="{{analyticsIdTagPrefix}}.startEndAllDay.endDate.input">\n      </div>\n      <div class="columns small-6">\n        <bb-time-picker\n          name="end-time"\n          analytics-id="{{analyticsIdTagPrefix}}.startEndAllDay.endTime.input"\n          invalid-validation-key="time"\n          ng-model="startEndAllDay.endTimePickerValue"\n          disabled="disabled"\n          placeholder="{{startEndAllDay.formattedEndTimePlaceholderValue}}"\n          bb-translate-attrs="{\'aria-label\': \'components.directives.calendar.startEndAllDay.endTime\'}"\n          on-view-value-cleared="onTimePickerValueCleared"\n        >\n        </bb-time-picker>\n      </div>\n    </div>\n\n    <div bb-validation-messages for="end-date">\n      <span ng-message="required"><bb-translate>components.directives.calendar.startEndAllDay.error.endDateEmptyError</bb-translate></span>\n    </div>\n    <div bb-validation-messages for="end-time">\n      <span ng-message="time"><span bb-translate>components.directives.validation.messages.errors.time</span></span>\n    </div>\n  </div>\n\n  \x3c!--All Day Event--\x3e\n  <div class="row collapse all-day-event" ng-show="isAllDay">\n    <label ng-show="isRepeatEvent" bb-translate>components.directives.calendar.startEndAllDay.firstDayLabel</label>\n    \x3c!--Start Date--\x3e\n    <label bb-form-label-decorator\n           for="{{startEndAllDay.inputDatesIds.allDayStartDate}}"\n           class="show-labels"\n           bb-translate\n           bb-translate-attrs="{\'aria-label\':\'components.directives.calendar.startEndAllDay.start\'}">\n      components.directives.calendar.startEndAllDay.start\n    </label>\n    <div class="date-time-inputs row collapse">\n      <div class="columns small-12 {{startEndAllDay.inputDatesContainers.allDayStartDate}}">\n        <label class="sr-only" for="{{startEndAllDay.inputDatesIds.allDayStartDate}}" bb-translate>components.directives.calendar.startEndAllDay.startDate</label>\n        <input id="{{startEndAllDay.inputDatesIds.allDayStartDate}}"\n               name="all-day-start-date"\n               ng-disabled="disabled"\n               bb-date-picker\n               orientation="auto left"\n               container=".{{startEndAllDay.inputDatesContainers.allDayStartDate}}"\n               first-day-of-week="startEndAllDay.localeSettings.calendar.firstDayOfWeek"\n               ng-model="startEndAllDay.allDayStartDatePickerValue"\n               ng-required="true"\n               type="text"\n               analytics-id="{{analyticsIdTagPrefix}}.startEndAllDay.startDate.input">\n      </div>\n    </div>\n\n    <div bb-validation-messages for="all-day-start-date">\n      <span ng-message="required"><bb-translate>components.directives.calendar.startEndAllDay.error.startDateEmptyError</bb-translate></span>\n    </div>\n\n    \x3c!--End Date--\x3e\n    <div ng-show="!isRepeatEvent">\n      <label bb-form-label-decorator\n             for="{{startEndAllDay.inputDatesIds.allDayEndDate}}"\n             class="show-labels"\n             bb-translate\n             bb-translate-attrs="{\'aria-label\':\'components.directives.calendar.startEndAllDay.end\'}">\n        components.directives.calendar.startEndAllDay.end\n      </label>\n      <div class="date-time-inputs row collapse">\n        <div class="columns small-12 {{startEndAllDay.inputDatesContainers.allDayEndDate}}">\n          <label class="sr-only" for="{{startEndAllDay.inputDatesIds.allDayEndDate}}" bb-translate>components.directives.calendar.startEndAllDay.endDate</label>\n          <input id="{{startEndAllDay.inputDatesIds.allDayEndDate}}"\n                 name="all-day-end-date"\n                 ng-disabled="disabled"\n                 bb-date-picker\n                 orientation="auto left"\n                 container=".{{startEndAllDay.inputDatesContainers.allDayEndDate}}"\n                 first-day-of-week="startEndAllDay.localeSettings.calendar.firstDayOfWeek"\n                 ng-model="startEndAllDay.allDayEndDatePickerValue"\n                 ng-required="true"\n                 analytics-id="{{analyticsIdTagPrefix}}.startEndAllDay.endDate.input">\n        </div>\n      </div>\n\n      <div bb-validation-messages for="all-day-end-date">\n        <span ng-message="required"><bb-translate>components.directives.calendar.startEndAllDay.error.endDateEmptyError</bb-translate></span>\n      </div>\n    </div>\n  </div>\n\n  \x3c!--Due Date Event--\x3e\n  <div ng-show="isDueDate()">\n    <label class="show-labels"\n           bb-translate\n           bb-translate-attrs="{\'aria-label\':\'components.directives.calendar.startEndAllDay.due\'}">\n      components.directives.calendar.startEndAllDay.due\n    </label>\n    <div class="row collapse">\n      <div class="date-time-inputs row collapse">\n        <div class="columns small-6 due-date-event {{startEndAllDay.inputDatesContainers.dueDate}}">\n          <label class="sr-only" for="{{startEndAllDay.inputDatesIds.dueDate}}" bb-translate>components.directives.calendar.startEndAllDay.dueDate</label>\n          <input id="{{startEndAllDay.inputDatesIds.dueDate}}"\n                 name="due-date"\n                 ng-disabled="disabled"\n                 bb-date-picker\n                 orientation="auto left"\n                 container=".{{startEndAllDay.inputDatesContainers.dueDate}}"\n                 first-day-of-week="startEndAllDay.localeSettings.calendar.firstDayOfWeek"\n                 ng-model="startEndAllDay.startDatePickerValue"\n                 analytics-id="{{analyticsIdTagPrefix}}.startEndAllDay.dueDate.input">\n        </div>\n        <div class="columns small-6">\n          <bb-time-picker\n            name="due-time"\n            analytics-id="{{analyticsIdTagPrefix}}.startEndAllDay.dueDateTime.input"\n            invalid-validation-key="time"\n            ng-model="startEndAllDay.startTimePickerValue"\n            disabled="disabled"\n            placeholder-date="{{startEndAllDay.formattedStartTimePlaceholderValue}}"\n            bb-translate-attrs="{\'aria-label\': \'components.directives.calendar.startEndAllDay.dueTime\'}"\n            on-view-value-cleared="onTimePickerValueCleared"\n          >\n          </bb-time-picker>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  \x3c!--If All Day Event (checkbox)--\x3e\n  <div class="row collapse all-day-event-control">\n    <div class="inline-form-row row collapse">\n      \x3c!--all day label--\x3e\n      <div class="columns">\n        <input id="all-day-{{startEndAllDay.allDayId}}"\n               name="all-day"\n               type="checkbox"\n               ng-model="isAllDay"\n               ng-disabled="disabled || isDueDate()"\n               analytics-id="{{analyticsIdTagPrefix}}.startEndAllDay.allDay.input">\n        <label for="all-day-{{startEndAllDay.allDayId}}" bb-translate>components.directives.calendar.startEndAllDay.allDay</label>\n      </div>\n    </div>\n  </div>\n</div>\n'}}]);