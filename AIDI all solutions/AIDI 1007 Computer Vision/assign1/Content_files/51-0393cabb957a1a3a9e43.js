(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{"2uem":function(e,t,s){"use strict";(function(e){s.d(t,"b",(function(){return T})),s.d(t,"a",(function(){return V}));var i=s("D57K"),n=(s("GkCm"),s("s5UK"),s("A51O"),s("sTfY"),s("E38C"),s("smDF"),s("SHbF"),s("6afs"),s("nsO7")),a=s("Llzl"),r=s("9zo4"),o=s("oVrE"),c=s("PdQf"),l=s("bbg+"),h=s("XQF1"),p=s("r133"),d=s("bDYn"),u=s("QoHD"),m=s("jbaE"),v=s("Qbdf"),g=s("0JpG"),b=s("pjml"),f=s("5RJJ"),P=s("lEL+"),w=s("TnpK"),C=s("nkTj"),y=s("nYZ0"),M=s("0+Qs"),S=s("jhBu"),x=s("LVAd"),$=s("fYJU"),I=s("ZzYr"),A=s("BjFu"),R=s("Sa5G"),k=s("aHpC"),L=s("yC9S"),O=s("GbAM"),N=s("IbyE"),E=s("kk+D"),B=s("ERsv"),j=s("Y+9S"),z=s("WyD7");const T="ultra.directives.courseConversation",V="student_messages_readonly_mode",D="messaging_force_email_mode";let U=class{constructor(e,t,s,i,r,l,h,p,d,u,m,v,g,b,f,P,w,C,y,M,S){if(this.$scope=e,this.element=t,this.$rootScope=s,this.$q=i,this.$location=r,this.$anchorScroll=l,this.$window=h,this.$ngRedux=p,this.CourseModel=d,this.UserModel=u,this.accessibility=m,this.ultraState=v,this.contextCourse=g,this.content=b,this.membershipService=f,this.timeout=P,this.interval=w,this.bbLocalize=C,this.entitlementService=y,this.contextUser=M,this.nameFormatService=S,this.newMessage="",this.isRefreshing=!1,this.showPreviousMessageButton=!1,this.maxParticipantCount=5,this.isShowSendEmailCheckbox=!1,this.emailParticipants=!1,this.canBeRepliedTo=!0,this.newParticipants=[],this.showParticipantInputBoxSpinner=!1,this.showParticipantInputBox=!1,this.enableAddParticipant=!1,this.isSendingMessage=!1,this.isSendButtonClicked=!1,this.participantsMap={},this.includeAllMembers=!1,this.participantsToShow=[],this.participantsWithoutSender=[],this.anonymousUser=o.b(this.$scope,this.bbLocalize),this.lastMessageAnchor="lastMessageAnchor",this.hasUnreadMessage=!1,this.RESIZE_DELAY=150,this.checkboxIsMouseDown=!1,this.userCourseAvailabilities={},this.hasAvailableParticipant=!1,this.loadReadOnlyPreference=()=>Promise.resolve(null),this.readOnlyPreference=!0,this.courseMessagesAreReadOnly=!0,this.forceEmailPreference=!1,this.onMessageChange=()=>{this.entitlementService.isEntitled(R.v.ModifyContent,this.courseId)||(this.isInputTooLong=Object(B.isMessageTooLong)(this.newMessage))},this.notifyHandler=(e,t)=>{if(!this.messageEntriesOffsetTop||!this.messageEntriesOffsetBottom){const e=a.element(".message-entries");this.messageEntriesOffsetTop=e.offset().top,this.messageEntriesOffsetBottom=this.messageEntriesOffsetTop+e.innerHeight()}if(this.course&&e&&t&&!t.isRead){const e=a.element("#message-entry-"+t.id);e.offset().top+e.innerHeight()<=this.messageEntriesOffsetBottom&&(t.isRead=!0,this.conversation.unreadCount--,t.$save(["isRead"]).$then((()=>{this.conversation.unreadCount<1&&this.emitMessageRefreshEvent("READ_STATUS",[this.conversation])})))}},this.conversationId=e.conversationId,this.courseMembership=e.courseMembership,this.isViewMode=!!this.conversationId,this.accessibility.isFocusDelayed=!0,C.loadBundle("components/directives/messages").then((()=>{this.isViewMode||this.timeout((()=>{this.accessibility.focusCorrectElementOnPanel()}),this.$scope,0),this.initConversationLoaderAria()})),this.offset=n.defaultTo(parseInt(this.ultraState.params.offset,10),0),this.count=n.defaultTo(parseInt(this.ultraState.params.count,10),1),this.interval((()=>{if(0===a.element(".message-panel .is-new").length){const e=a.element(".message-panel .panel-content"),t=a.element(".message-reply-container"),s=e.innerHeight()-t.innerHeight();t.css("top",s),this.resizeContainer()}}),e,500,0,!1),this.identifyCourse().then((e=>{this.course=e,this.emailParticipants=!!this.isCoursePrivate(),this.localizeTokenPrefix="components.directives.message.participant.",e.isOrganization&&(this.localizeTokenPrefix="components.directives.message.organization.participant."),this.allMembersDummyParticipant=c.g(this.$scope,this.bbLocalize,this.localizeTokenPrefix+"allCourseMembers"),this.courseId=this.course.id,this.initUserActiveInfo(),this.isViewMode&&(this.refreshConversation(0),this.refreshVisibilityOfNavigateButtons())})),this.$scope.$on("isNeedConfirm",(e=>{let t=!1;(this.newParticipants&&this.newParticipants.length>0||this.newMessage)&&(t=!this.isSendButtonClicked),this.$scope.$emit("needConfirm",t)})),this.$scope.recipientIds){let e=[];e=this.$scope.recipientIds.map((e=>({method:"GET",relativeUrl:e}))),this.showParticipantInputBoxSpinner=!0,u.$collection().batchGetCollection(e).then((e=>{e.forEach((e=>{const t=a.fromJson(e.body);this.newParticipants.push(t)}))})).finally((()=>this.showParticipantInputBoxSpinner=!1))}L.b.OnWindow("resize",n.debounce(this.resizeContainer,this.RESIZE_DELAY),e),this.setAllowReplies(),this.entitlementService.hasCourseEntitlement(R.n.EmailAllUsers,this.courseId).then((e=>{this.isShowSendEmailCheckbox=e})),this.subscribeToRedux(),this.loadReadOnlyPreference({key:V}),this.loadReadOnlyPreference({key:D})}isExist(e){if(this.conversation&&this.conversation.participants){let t=this.conversation.participants.some((t=>t.id===e));return t||(t=this.conversation.participantIds.some((t=>t===e))),t}return!1}isCoursePrivate(){return this.course&&(this.course.isPrivate()||!Object(A.a)(this.course))}subscribeToRedux(){const e=this.$ngRedux.connect((e=>{const t=Object(E.a)(e,V,!0);return{forceEmailPreference:Object(E.a)(e,D,!1),readOnlyPreference:t,courseMessagesAreReadOnly:t&&this.courseMembership.isStudentMembership()}}),(e=>({loadReadOnlyPreference:t=>{e(N.V.systemPreference.loadSystemPreference(t))}})))(this);this.$scope.$on("$destroy",e)}initConversationLoaderAria(){this.ariaLoadingConversation=this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.$scope),key:"components.directives.message.conversationLoading"}),this.ariaConversationLoaded=this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.$scope),key:"components.directives.message.conversationLoaded"})}async setAllowReplies(){if(null==this.$scope.allowReplies){const e=await this.entitlementService.hasCourseEntitlement(R.j.ModifyAllowConversationReplies,this.courseId);this.$scope.allowReplies=()=>e}}isRemoveSysMessage(e){const t=a.fromJson(e);if(t.sender){if(t.isBroadcast||t.includesAllMembers)return!1;for(let e=0;e<t.participants.length;e++)if(this.isExist(t.participants[e]))return!1}return!0}identifyCourse(){return this.courseId=this.$scope.courseId?this.$scope.courseId:this.contextCourse.courseId,this.$scope.course?this.$scope.course.model.$asPromise():this.CourseModel.$find(this.courseId).$asPromise()}reset(e,t){e&&!Number.isNaN(Number(t))&&this.refreshConversation(t),this.messageEntriesOffsetTop=null,this.messageEntriesOffsetBottom=null,this.showParticipantInputBox=!1,this.isSendingMessage=!1,this.includeAllMembers=!1,this.emailParticipants=!!this.isCoursePrivate()}setMessageSender(){this.conversation.participants.forEach((e=>{this.participantsMap[e.id]||(this.participantsMap[e.id]=e)}));let e=0;this.hasUnreadMessage=!1,this.showPreviousMessageButton=!0;const t=this;this.conversation.messages.forEach((s=>{s.sender?s.ui.sender=this.UserModel.$buildRaw(s.sender):C.a.isValid(s.senderId)?(this.participantsMap[s.senderId]||(this.participantsMap[s.senderId]=this.UserModel.$build(),this.UserModel.$find(s.senderId).$then((e=>{this.participantsMap[s.senderId].givenName=e.givenName,this.participantsMap[s.senderId].familyName=e.familyName,this.participantsMap[s.senderId].avatar=e.avatar}),(()=>{t.participantsMap[s.senderId].givenName=this.anonymousUser.givenName,t.participantsMap[s.senderId].familyName=this.anonymousUser.familyName}))),s.ui.sender=this.participantsMap[s.senderId]):s.ui.sender=this.UserModel.$buildRaw(this.anonymousUser),this.showPreviousMessageButton&&s.isRead&&!this.hasUnreadMessage?(s.ui.isPreviousMessage=!0,e++):s.isRead||(this.hasUnreadMessage=!0)})),this.conversation.messages.length!==e&&0!==e||(this.showPreviousMessageButton=!1)}processParticipant(e){if(e.userName||(e.givenName=this.anonymousUser.givenName,e.familyName=this.anonymousUser.familyName),e.id===this.contextUser.userId){const t=this.nameFormatService.formatSelfGivenName(e.givenName,this.bbLocalize.getLocale(this.$scope));this.participantsToShow.unshift({userName:"",givenName:t,familyName:""})}else this.participantsWithoutSender.push(e),this.participantsToShow.push(e),this.userCourseAvailabilities[e.id]&&(this.hasAvailableParticipant=!0)}setParticipants(){this.hasAvailableParticipant=!1,this.participantsToShow.length=0,this.participantsWithoutSender.length=0;const e=this.resolveRecipientCategoryToParticipants();if(this.conversation&&this.conversation.participants){if(this.includeAllMembers)this.showParticipantInputBox=!1,this.enableAddParticipant=!1,this.participantsToShow.push(this.allMembersDummyParticipant),this.participantsWithoutSender.push(this.allMembersDummyParticipant),this.hasAvailableParticipant=!0;else if(this.validateParticipantsNotInACategory(),this.validateRecipientsCategory(),this.participantsToShow.length>0)this.hasAvailableParticipant=!0;else{const t=n.clone(e.concat(...this.conversation.participants));if(1===t.length&&0===e.length){this.participantsWithoutSender.push(t[0]);const e=this.nameFormatService.formatSelfGivenName(t[0].givenName,this.bbLocalize.getLocale(this.$scope));this.participantsToShow.unshift({userName:"",givenName:e,familyName:""})}else t.forEach((e=>{this.processParticipant(e)}))}Object(j.m)()&&this.notifyMobileApp()}}validateParticipantsNotInACategory(){var e,t;(null===(e=this.conversation.participantsNotInACategory)||void 0===e?void 0:e.length)>0&&(null===(t=this.conversation.recipientCategory)||void 0===t?void 0:t.length)>0&&this.conversation.participantsNotInACategory.forEach((e=>{this.processParticipant(e)}))}validateRecipientsCategory(){var e,t,s;(null===(e=this.conversation)||void 0===e?void 0:e.recipientCategory)&&(null===(s=null===(t=this.conversation)||void 0===t?void 0:t.recipientCategory)||void 0===s||s.forEach((e=>{var t,s;if(e===c.d())return;const i=c.f(e);this.localizeTokenPrefix=this.course.isOrganization?"components.directives.message.organization.participant.":"components.directives.message.participant.";const n=c.g(this.$scope,this.bbLocalize,`${this.localizeTokenPrefix}${i}`);n.familyName=null!==(t=n.familyName)&&void 0!==t?t:"",n.userName=null!==(s=n.givenName)&&void 0!==s?s:n.givenName,this.participantsWithoutSender.unshift(n),this.participantsToShow.unshift(n)})))}notifyMobileApp(){this.bbLocalize.formatUsername(this.participantsWithoutSender[0],g.ILocaleUsernameFormat.Short,this.$scope,{noWrap:!0,noEscape:!0}).then((e=>{const t={type:j.c.CourseMessageOpened,status:j.b.Success,contentId:this.conversationId,contentTitle:e,permission:{next:this.canNavigateNext(),prev:this.canNavigatePrev()}},s=Object(j.q)(t);s.response.subscribe((e=>{e.event===j.a.Prev?this.navigatePrev():e.event===j.a.Next&&this.navigateNext()})),this.$scope.$on("$destroy",(()=>{Object(j.f)(s.correlationId)}))}))}isInPeekStreamMessageView(){return this.ultraState.$current&&this.ultraState.$current.name&&this.ultraState.$current.name.indexOf("peek.stream-message")>-1}fetchConversation(e){const t=this.$q.defer();if(void 0===e||Number.isNaN(e))return this.expandPermissions(this.conversation,this.course.conversations).then((()=>{t.resolve(this.conversation)})),t.promise;if(0===e)return this.course.conversations.$clear().$find(this.conversationId).$then((e=>{this.conversation=e,this.expandPermissions(this.conversation,this.course.conversations).then((()=>{t.resolve(this.conversation)}))})),t.promise;const s=this.offset+e;return this.course.conversations.$refresh({offset:s,limit:1}).$then((e=>{this.offset=e.paging.offset,this.count=e.paging.count,this.conversation=e[0],this.conversationId=this.conversation.id,this.conversation.permissions=e.permissions,t.resolve(this.conversation)})),t.promise}expandPermissions(e,t){const s=null==e.permissions,i=this.$q.defer();return s?(t.$refresh({offset:0,limit:1}).$then((t=>{e.permissions=t.permissions,i.resolve(e)})),i.promise):(i.resolve(e),i.promise)}expandParticipants(e){const t=!this.conversation||!this.conversation.participants||0===this.conversation.participants.length,s=this.$q.defer();if(!t)return s.resolve(this.conversation.participants),s.promise;let i={};return this.includeAllMembers&&(i={filterBy:"sendMessage"}),e.$new(this.conversation.id).participants.$refresh(i).$then((e=>{this.conversation.participants=e,s.resolve(e)})),s.promise}expandMessages(e){const t=!this.conversation||!this.conversation.messages||0===this.conversation.messages.length,s=this.$q.defer();return t?(e.$new(this.conversation.id).messages.$refresh({sort:"postDate(asc)"}).$then((e=>{n.remove(e,(e=>!!e.isSystemMessage()&&this.isRemoveSysMessage(e.body.rawText))),this.conversation.messages=e,this.isSendButtonClicked&&this.emitMessageCreatedEvent(this.conversation),s.resolve(e)})),s.promise):(s.resolve(this.conversation.messages),s.promise)}refreshConversation(e){const t=this.timeout((()=>{this.isRefreshing=!0,this.$rootScope.$broadcast(O.b,this.ariaLoadingConversation)}),this.$scope,1e3),s=this;this.fetchConversation(e).then((()=>{this.conversation.isMigrationInProgress?this.isInPeekStreamMessageView()?(this.timeout.cancel(t),this.isRefreshing=!1,this.$rootScope.$broadcast(O.b,this.ariaConversationLoaded),this.ultraState.transitionTo("base.messages")):(this.emitMessageRefreshEvent("",[this.conversation.id]),this.ultraState.leavePeekState(this.ultraState.current.name),this.reset(!1)):this.$q.all({participants:this.expandParticipants(this.course.conversations),messages:this.expandMessages(this.course.conversations)}).then((()=>{this.canBeRepliedTo=this.conversation.canBeRepliedTo,this.includeAllMembers=this.conversation.includesAllMembers,this.setMessageSender(),this.setParticipants(),this.timeout.cancel(t),this.isRefreshing=!1,this.$rootScope.$broadcast(O.b,this.ariaConversationLoaded),s.hasUnreadMessage||s.scrollDown(s.lastMessageAnchor),s.setContainerSize(),a.element("#message-reply").focus(),this.timeout((()=>{this.accessibility.focusCorrectElementOnPanel()}),this.$scope,0)}))})),this.$scope.isNavigationHidden||this.refreshVisibilityOfNavigateButtons()}refreshVisibilityOfNavigateButtons(){this.setContainerSize()}emitMessageRefreshEvent(e,t){this.$rootScope.$broadcast("bb-message-refresh",this.courseId,e,t)}emitMessageCreatedEvent(e){this.$rootScope.$broadcast("bb-message-create",this.courseId,e)}get isEnableAddParticipantButton(){return!this.isRefreshing&&!this.isSendingMessage}get isShowAddParticipantButton(){return!this.courseMessagesAreReadOnly&&(this.isViewMode&&this.conversation&&this.conversation.canEdit()&&this.conversation.canBeRepliedTo&&!this.includeAllMembers)}get isShowStudentsAreReadOnlyMessage(){return this.courseMembership&&!this.courseMembership.isStudentMembership()&&this.readOnlyPreference&&!this.isViewMode}get isShowMessageReplyArea(){return!this.courseMessagesAreReadOnly&&(!this.isViewMode||this.isViewMode&&this.canBeRepliedTo&&this.conversation&&this.conversation.canEdit()&&(this.hasAvailableParticipant||this.hasOneNewParticipantAvailable()))}get isShowNotAllowRepliesMessage(){return!!this.courseMessagesAreReadOnly||this.isViewMode&&!(this.canBeRepliedTo&&(this.hasAvailableParticipant||this.hasOneNewParticipantAvailable()))}get isShowAllowRepliesCheckbox(){var e,t;return!this.isShowStudentsAreReadOnlyMessage&&(null===(t=(e=this.$scope).allowReplies)||void 0===t?void 0:t.call(e))&&!this.isViewMode}get isShowParticipantInputBox(){return!this.isViewMode||this.showParticipantInputBox}get isEnableMessageTextArea(){return!this.isRefreshing&&!this.isSendingMessage}get isShowBannerConversation(){return(this.isCoursePrivate()||this.isShowStudentsAreReadOnlyMessage||this.forceEmailPreference)&&!this.isViewMode}get isShowReadOnlyWithCoursePrivate(){return this.isShowStudentsAreReadOnlyMessage&&this.isCoursePrivate()}get isShowReadOnly(){return this.isShowStudentsAreReadOnlyMessage&&!this.isCoursePrivate()}get isShowCoursePrivate(){return this.isCoursePrivate()&&!this.isShowStudentsAreReadOnlyMessage}get isShowForceEmailPreference(){return this.forceEmailPreference&&!this.isCoursePrivate()&&!this.isShowStudentsAreReadOnlyMessage}get isSendButtonEnabled(){return(this.newParticipants.length>0||this.participantCount>0)&&(!this.isViewMode||!this.isShowNotAllowRepliesMessage)&&(this.participantsForm&&!this.participantsForm.$invalid||!this.participantsForm)&&this.messageReplyForm.messageReply.$dirty&&!this.isInputTooLong}get participantCount(){return this.conversation&&this.conversation.participantIds?this.conversation.participantIds.length:0}participantCountCallback(){return this.participantCount}canNavigatePrev(){return this.offset>0}canNavigateNext(){return this.offset<this.count-1}navigateTo(e){this.newParticipants=[],this.reset(!0,e),this.refreshVisibilityOfNavigateButtons()}navigatePrev(){this.navigateTo(-1)}navigateNext(){this.navigateTo(1)}onShowPreviousMessagesClicked(){this.showPreviousMessageButton=!1}onAddOneNewParticipant(e){this.isShowAllowRepliesCheckbox&&c.i(e)&&(this.canBeRepliedTo=!1),this.setContainerSize()}onRemoveOneParticipant(e){this.setContainerSize()}hasOneNewParticipantAvailable(){return this.newParticipants&&this.newParticipants.length>0&&this.newParticipants.some((e=>this.userCourseAvailabilities[e.id]))}sendMessage(e){this.setReady(!1);const t=this.conversation.messages.$build();t.body=e,this.showParticipantInputBox=!1,t.createReply(this.emailParticipants).$allow(["408"]).$then((()=>{this.onAfterSendMessage(),Object(j.o)(j.c.MessageSent)}))}onAfterSendMessage(){this.newMessage="",this.newParticipants.length=0,this.$scope.$applyAsync((()=>this.messageReplyForm.$setPristine())),this.delayedSpinner&&this.timeout.cancel(this.delayedSpinner),this.conversation.messages.$clear(),this.reset(!0,0),this.setReady(!0)}addNewParticipantsThenSendMessage(e){if(this.newParticipants){const t=n.map(this.newParticipants,"id");return this.conversation.newParticipantIds=t,this.conversation.$patch().$asPromise().then((()=>{this.conversation.participants.$refresh().$asPromise().then((()=>this.sendMessage(e)))}))}}onSendButtonClicked(){const e={rawText:this.newMessage,displayText:""};this.isSendButtonClicked=!0,this.isViewMode?(this.delayedSpinner=this.timeout((()=>{this.isSendingMessage=!0}),this.$scope,1e3),this.conversation=this.conversation||this.course.conversations.$find(this.conversationId),this.conversation.$asPromise().then((()=>{this.conversation.includesAllMembers?(this.includeAllMembers=!0,this.conversation.$patch().$asPromise().then((()=>{this.sendMessage(e)}))):this.newParticipants&&0!==this.newParticipants.length?this.addNewParticipantsThenSendMessage(e):this.isConversationIsBroadcastToAllMembers()?this.CourseModel.$new(this.courseId).memberships.$fetch({membershipAvailable:"true"}).$then((t=>{const s=[];t.forEach((e=>{e.userId in this.participantsMap||s.push(e.userId)})),this.conversation.newParticipantIds=s,this.conversation.$save(["newParticipantIds"]).$asPromise().then((()=>{this.sendMessage(e)}))})):this.sendMessage(e)}))):this.createConversation(e)}async createConversation(e){let t=this.newParticipants.map((e=>e.id));this.includeAllMembers&&(t=[this.allMembersDummyParticipant.id]);const s={participantIds:t,latestMessages:[{body:e}],canBeRepliedTo:this.canBeRepliedTo};!this.$scope.conversationPerRecipient||!this.$scope.conversationPerRecipient()||this.includeAllMembers||this.includesAllInstructors()||this.includesAllStudents()||(s.conversationPerRecipient=!0),this.isSendingMessage=!0;const i=await this.course.conversations.$build(s).createConversation(this.emailParticipants).$allow(["408"]).$asPromise();this.onAfterCreateConversation(i)}onAfterCreateConversation(e){this.isSendingMessage&&(this.emitMessageCreatedEvent(e),Object(j.o)(j.c.NewMessageCreated),this.ultraState.leavePeekState(this.ultraState.current.name),this.reset(!1))}onAddParticipantButtonClicked(){this.showParticipantInputBox=!0,this.setContainerSize()}onCloseParticipantButtonClicked(){this.showParticipantInputBox=!1,this.setContainerSize()}scrollDown(e){this.timeout((()=>{this.element.find("#"+e).scrollintoview({duration:0})}),this.$scope,100)}setContainerSize(){this.timeout((()=>{this.resizeContainer()}),this.$scope)}resizeContainer(){const t=a.element(".message-entries"),s=t.hasClass("read-only")?".replies-disabled":".message-reply-container",i=a.element(s);let n=0;i.length>0&&t.length>0?n=i.offset().top-t.offset().top:t.length>0&&(n=a.element(".message-panel .panel-content").height()-t.position().top),e(".message-entries").height(n)}setReady(e){this.element.find("#reply-button").attr("ready",e.toString())}initUserActiveInfo(){this.membershipService.getUserCourseAvailabilities(this.courseId).then((e=>{this.userCourseAvailabilities=e}))}isUserInactive(e){return e&&!this.userCourseAvailabilities[e.id]}getDisabledReplyPlaceholder(){return this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.$scope),key:"components.directives.message.replyingDisabled"})}includesAllInstructors(){return!!this.newParticipants&&this.newParticipants.some((e=>c.h(e)))}includesAllStudents(){return!!this.newParticipants&&this.newParticipants.some((e=>c.j(e)))}isMultiParticipants(){return this.includeAllMembers||this.newParticipants.length>1||this.includesAllInstructors()||this.includesAllStudents()}hasConversationPerRecipient(){var e,t;return!this.isViewMode&&!this.includeAllMembers&&!this.includesAllInstructors()&&!this.includesAllStudents()&&(null===(t=(e=this.$scope).conversationPerRecipient)||void 0===t?void 0:t.call(e))}showIndividualMessageWarning(){return this.isMultiParticipants()&&this.hasConversationPerRecipient()}isConversationIsBroadcastToAllMembers(){var e;return this.includeAllMembers||(null===(e=this.conversation)||void 0===e?void 0:e.isCategoryIncluded(this.allMembersDummyParticipant.id))}resolveRecipientCategoryToParticipants(){var e;const t=null===(e=this.conversation.recipientCategory)||void 0===e?void 0:e.map((e=>this.localizeTokenPrefix+c.f(e)));return c.m(t,this.$scope,this.bbLocalize)}};U=Object(i.a)([Object(i.c)(0,Object(k.b)("scope")),Object(i.c)(1,Object(k.b)("element")),Object(i.c)(2,Object(k.b)("$rootScope")),Object(i.c)(3,Object(k.b)("$q")),Object(i.c)(4,Object(k.b)("$location")),Object(i.c)(5,Object(k.b)("$anchorScroll")),Object(i.c)(6,Object(k.b)("$window")),Object(i.c)(7,Object(k.b)("$ngRedux")),Object(i.c)(8,Object(k.b)(b.m.serviceName)),Object(i.c)(9,Object(k.b)(b.Jb.serviceName)),Object(i.c)(10,Object(k.b)(r.c)),Object(i.c)(11,Object(k.b)(w.d)),Object(i.c)(12,Object(k.b)(v.e)),Object(i.c)(13,Object(k.b)(y.f)),Object(i.c)(14,Object(k.b)(f.b)),Object(i.c)(15,Object(k.b)(P.b)),Object(i.c)(16,Object(k.b)(M.b)),Object(i.c)(17,Object(k.b)(g.serviceName)),Object(i.c)(18,Object(k.b)(S.b)),Object(i.c)(19,Object(k.b)($.b)),Object(i.c)(20,Object(k.b)(l.b))],U);class F{constructor(e,t){this.$injector=e,this.$stateParams=t,this.restrict="E",this.template=x,this.scope={conversationId:"@?",courseId:"@?",recipientIds:"=",allowReplies:"&?",conversationPerRecipient:"&?",courseMembership:"<"},this.link=(e,t)=>{e.courseId&&e.conversationId||(e.courseId=this.$stateParams.courseId,e.conversationId=this.$stateParams.conversationId,e.isNavigationHidden=!0),e.conversationController=this.$injector.instantiate(U,{scope:e,element:t})}}}F.$inject=["$injector","$stateParams"],a.module(T,[r.b,h.a,p.a,d.a,u.a,m.a,v.b,g.moduleName,b.N,f.a,P.a,w.b,y.d,I.a,l.a,z.a]).directive("bbCourseConversation",["$injector",e=>e.instantiate(F)])}).call(this,s("71td"))},"6afs":function(e,t,s){},A51O:function(e,t,s){var i=s("ziER"),n=s("5JeM"),a=new i({id:"icon-small-arrow-right",use:"icon-small-arrow-right-usage",viewBox:"0 0 16 16",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="icon-small-arrow-right"><path d="M5 1l7 7-7 7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});n.add(a);e.exports=a},E38C:function(e,t,s){var i=s("ziER"),n=s("5JeM"),a=new i({id:"icon-medium-arrow-right",use:"icon-medium-arrow-right-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-arrow-right"><path d="M7 1l10 11L7 23" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});n.add(a);e.exports=a},LVAd:function(e,t){e.exports='<div bb-first-time-container bb-load-bundle="components/directives/messages" id="message-panel" class="message-panel panel-wrap"\n     ng-class="{\'with-overlay\': conversationController.isSendingMessage}">\n  <header class="color-selection-live-mode panel-header simple-header">\n    <div class="panel-titles-container">\n      <div class="panel-sub-title message-title hide-for-small-only">{{conversationController.course.displayName}}</div>\n      <div class="black-header-contents message-navigation">\n        <button class="left-off-canvas-toggle menu-toggle standard-button dark-background"\n                type="button"\n                analytics-id="component.directives.messages.courseConversation.menu.button">\n          <bb-svg-icon class="themed-background-primary-medium-down" size="small" icon="main-menu"></bb-svg-icon>\n          <span class="sr-only" bb-translate>components.directives.message.menu</span>\n        </button>\n        <h1 class="panel-title" ng-if="conversationController.isViewMode">\n          <bb-usernames users="conversationController.participantsWithoutSender" auto-update="true"\n                        max-user="conversationController.maxParticipantCount" more-clickable="false" format="brief">\n          </bb-usernames>\n        </h1>\n        <h1 class="panel-title" bb-translate ng-if="!conversationController.isViewMode">components.directives.message.newMessage</h1>\n        <button class="standard-button prev-message"\n                ng-if="!isNavigationHidden"\n                bb-translate-attrs="{\'aria-label\': \'components.directives.message.previousMessage\', \'title\': \'components.directives.message.previousMessage\'}"\n                ng-disabled="!conversationController.canNavigatePrev()"\n                ng-class="{\'disabled-navigation\': !conversationController.canNavigatePrev()}"\n                ng-click="conversationController.navigatePrev()"\n                analytics-id="components.directives.messages.courseConversation.previousConversation.button">\n          <bb-svg-icon size="small" icon="arrow-left"></bb-svg-icon>\n          <bb-svg-icon size="medium" icon="arrow-left"></bb-svg-icon>\n        </button>\n        <button class="standard-button next-message"\n                ng-if="!isNavigationHidden"\n                bb-translate-attrs="{\'aria-label\': \'components.directives.message.nextMessage\', \'title\': \'components.directives.message.nextMessage\'}"\n                ng-disabled="!conversationController.canNavigateNext()"\n                ng-class="{\'disabled-navigation\': !conversationController.canNavigateNext()}"\n                ng-click="conversationController.navigateNext()"\n                analytics-id="components.directives.messages.courseConversation.nextConversation.button">\n          <bb-svg-icon size="small" icon="arrow-right"></bb-svg-icon>\n          <bb-svg-icon size="medium" icon="arrow-right"></bb-svg-icon>\n        </button>\n      </div>\n    </div>\n  </header>\n  <div class="panel-content panel-content-inner" ng-class="{\'is-new -has-footer\': !conversationController.isViewMode}">\n    <div class="banner-conversation-container" ng-if="conversationController.isShowBannerConversation">\n      <div class="banner-conversation">\n        <div class="banner-conversation-icon">\n          <bb-ui-icon-small-information class="icon"></bb-ui-icon-small-information>\n        </div>\n        <div class="banner-conversation-text" aria-live="polite" role="status">\n          <span ng-if="conversationController.isShowForceEmailPreference" bb-translate>components.directives.message.emailCopy</span>\n          <span ng-if="conversationController.isShowCoursePrivate" course-org-token-resolver bb-translate>components.directives.message.newMessagePanelInfo</span>\n          <span ng-if="conversationController.isShowReadOnly" course-org-token-resolver bb-translate>components.directives.message.studentsCannotCreateOrReply</span>\n          <span ng-if="conversationController.isShowReadOnlyWithCoursePrivate" course-org-token-resolver bb-translate>components.directives.message.newMessagePanelOnlyEmailCopy</span>\n        </div>\n      </div>\n    </div>\n    <div class="peek-panel-message-header">\n      <div ng-if="conversationController.isViewMode" class="timestamp-particpant-info">\n        <div class="message-timestamp">\n          <span bb-translate>components.directives.message.conversationDate</span>\n          <span bb-translate>\n            <bb-duration class="message-create-date" date="conversationController.conversation.createdDate"\n                         auto-update="true" has-ago="true"></bb-duration>\n          </span>\n        </div>\n        <div class="participant-info">\n          <div class="row collapse">\n            <div class="columns small-10">\n              <div class="participant-names">\n                <span bb-translate>components.directives.message.to</span>\n                <bb-usernames users="conversationController.participantsToShow" auto-update="true"\n                              max-user="conversationController.maxParticipantCount" more-clickable="true" format="brief">\n                </bb-usernames>\n              </div>\n            </div>\n            <div class="columns small-2">\n              <button id="add-participant-button" class="clear round right" ng-click="conversationController.onAddParticipantButtonClicked()"\n                      ng-if="conversationController.isShowAddParticipantButton && !conversationController.isShowParticipantInputBox"\n                      ng-disabled="!conversationController.isEnableAddParticipantButton"\n                      bb-translate-attrs="{\'aria-label\': \'components.directives.message.addParticipants\', \'title\': \'components.directives.message.addParticipants\'}"\n                      bb-click-focus="#participant-list"\n                      analytics-id="components.directives.messages.courseConversation.addParticipants.button">\n                <bb-svg-icon icon="add-circle" size="medium"></bb-svg-icon>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <label bb-form-label-decorator="{required:true}" for="participant-list" class="js-recipient-label" bb-translate ng-if="conversationController.isShowParticipantInputBox"\n             ng-class="{\'sr-only\': conversationController.isViewMode}">components.directives.message.recipients</label>\n      <bb-participants course-id="{{conversationController.courseId}}"\n                       participants="conversationController.newParticipants"\n                       include-all-members="conversationController.includeAllMembers"\n                       show-participant-input-box="conversationController.showParticipantInputBox"\n                       show-participant-input-box-spinner="conversationController.showParticipantInputBoxSpinner"\n                       is-exist="conversationController.isExist(id)"\n                       count-participants-in-conversation="conversationController.participantCountCallback()"\n                       exclude-me="true"\n                       joined-participants-num="conversationController.conversation.participants.length"\n                       on-add-participant="conversationController.onAddOneNewParticipant(user)"\n                       on-remove-participant="conversationController.onRemoveOneParticipant(user)"\n                       ng-if="conversationController.isShowParticipantInputBox"\n                       participants-form="conversationController.participantsForm"\n                       is-private-conversation="conversationPerRecipient()"\n      ></bb-participants>\n      <div class="individual-message-warning" ng-if="conversationController.showIndividualMessageWarning()">\n        <bb-ui-icon-small-information class="icon message-warning-icon"></bb-ui-icon-small-information>\n        <span bb-translate>components.directives.message.privateMessage</span>\n      </div>\n      <div class="participant-list-close" ng-if="conversationController.isShowParticipantInputBox && conversationController.isViewMode">\n        \x3c!-- htmlhint:analytics-id:disable --\x3e\n        <button class="button-anchor"\n                bb-click-focus="#add-participant-button"\n                ng-click="conversationController.onCloseParticipantButtonClicked()"\n                bb-translate\n                analytics-id="components.directives.messages.courseConversation.closeParticipantsBox.button">\n          global.close\n        </button>\n        \x3c!-- htmlhint:analytics-id:enable --\x3e\n      </div>\n    </div>\n    <div class="message-entries" in-view-container\n         ng-class="{\'read-only\': conversationController.isShowNotAllowRepliesMessage}">\n      <div class="old-replies" ng-if="conversationController.showPreviousMessageButton">\n        <button class="show-previous-replies"\n                ng-click="conversationController.onShowPreviousMessagesClicked()"\n                analytics-id="components.directives.messages.courseConversation.showPreviousReplies.button">\n          <span bb-translate>components.directives.message.previousMessage</span>\n        </button>\n      </div>\n      <div id="message-entry-{{message.id}}" class="message-entry"  ng-repeat="message in conversationController.conversation.messages track by message.id"\n           in-view="conversationController.notifyHandler($inview, message)"\n           ng-if="!conversationController.showPreviousMessageButton || !message.ui.isPreviousMessage"\n           ng-class="{\'added-users\': message.isSystemMessage()}">\n        <div class="entry-status" ng-class="{unread : !message.isRead}"></div>\n        <div class="element-card" ng-if="!message.isSystemMessage()">\n          <bb-ui-avatar\n            hide-badge="message.isRead"\n            size="avatar.size"\n            position="avatar.position"\n            theme="avatar.theme"\n            unavailable="conversationController.isUserInactive(message.ui.sender)"\n            user="message.ui.sender"\n          ></bb-ui-avatar>\n          <div class="element-content">\n            <h2 class="message-user">\n              <bb-username class="name" user="message.ui.sender" format="short" auto-update="true" show-pronouns="true" show-pronunciation="true" ng-class="{ inactive: conversationController.isUserInactive(message.ui.sender) }"></bb-username>\n              <bb-duration date="message.postDate" auto-update="true" has-ago="true"></bb-duration>\n            </h2>\n          </div>\n        </div>\n        <div class="content">\n          <bb-course-message-content\n            class="participant-message"\n            message="message"\n            participants="conversationController.participantsMap"\n            is-organization="conversationController.course.isOrganization">\n        </bb-course-message-content>\n        </div>\n      </div>\n      <div ng-attr-id="{{::conversationController.lastMessageAnchor}}" style="visibility: hidden; height: 0px"/>\n    </div>\n    <div class="message-reply-container" ng-if="conversationController.isShowMessageReplyArea">\n      <div class="message-reply-panel">\n        \x3c!-- Send email --\x3e\n        <div class="row collapse" ng-if="!conversationController.forceEmailPreference">\n          <div class="columns small-12">\n            <div ng-if="conversationController.isShowSendEmailCheckbox && !conversationController.isCoursePrivate()"\n                 class="send-email-wrapper">\n              <input type="checkbox"\n                     id="send-email"\n                     ng-model="conversationController.emailParticipants"\n                     ng-checked="conversationController.emailParticipants"\n                     analytics-id="components.directives.messages.courseConversation.sendEmailCopy.input.checkbox"/>\n              <label for="send-email" class="send-email-label" bb-translate>components.directives.message.sendEmail</label>\n              <div class="send-email-warning" ng-show="conversationController.emailParticipants">\n                <span bb-translate>components.directives.message.sendEmailWarning</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        \x3c!-- Allow replies --\x3e\n        <div class="row collapse">\n          <div class="columns small-12">\n            <div ng-if="conversationController.isShowAllowRepliesCheckbox"\n                 class="allow-replies-wrapper">\n              <input type="checkbox"\n                     id="allow-replies"\n                     ng-model="conversationController.canBeRepliedTo"\n                     ng-checked="conversationController.canBeRepliedTo"\n                     analytics-id="components.directives.messages.courseConversation.allowReplies.input.checkbox"/>\n              <label for="allow-replies" class="allow-reply-label" bb-translate>components.directives.message.allowReplies</label>\n            </div>\n          </div>\n        </div>\n        <form name="conversationController.messageReplyForm" novalidate>\n          <label bb-form-label-decorator="{required:true}"\n                 class="message-reply-label"\n                 ng-class="{\'sr-only\': conversationController.isViewMode}"\n                 for="message-reply" bb-translate>components.directives.message.message</label>\n          <div ng-class="{\'invalid\': conversationController.isInputTooLong}">\n            <bb-rich-text-editor remove-from-dom="true"\n                                 bb-translate-attrs="{\'aria-label\': \'components.directives.message.typeMessageLabel\'}"\n                                 class="message-reply"\n                                 editor-placeholder-key="components.directives.message.typeMessage"\n                                 editor-id="message-reply"\n                                 name="messageReply"\n                                 is-disabled="!conversationController.isEnableMessageTextArea"\n                                 ng-model="conversationController.newMessage"\n                                 ng-change="conversationController.onMessageChange()"\n                                 plugin-options="{\'attachment\': true}"\n                                 analytics-id="components.directives.messages.courseConversation.textEditor"></bb-rich-text-editor>\n          </div>\n          <div class="error-message" role="alert" ng-if="conversationController.isInputTooLong">\n            <bb-svg-icon icon="attention" size="small" status="alert"></bb-svg-icon>\n            <span bb-translate>components.directives.message.tooLargeMessage</span>\n          </div>\n        </form>\n        <div class="send-wrapper" ng-if="conversationController.isViewMode">\n          \x3c!-- htmlhint:analytics-id:disable --\x3e\n          <button bb-translate\n                  class="button"\n                  id="reply-button"\n                  ng-click="conversationController.onSendButtonClicked()"\n                  ng-disabled="!conversationController.isSendButtonEnabled"\n                  analytics-id="components.directives.messages.courseConversation.sendMessage.button">\n            components.directives.message.reply\n          </button>\n          \x3c!-- htmlhint:analytics-id:enable --\x3e\n        </div>\n        <div class="message-anim" ng-if="conversationController.isSendingMessage || conversationController.isRefreshing">\n          <div class="spinner bb-secondary-color-2">\n            <span bb-translate ng-if="conversationController.isSendingMessage">components.directives.message.sendingMessage</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="replies-disabled" ng-if="conversationController.isShowNotAllowRepliesMessage">\n      <textarea placeholder="{{:: conversationController.getDisabledReplyPlaceholder()}}"\n                disabled="disabled"\n                analytics-id="components.directives.messages.courseConversation.replies.textarea"></textarea>\n    </div>\n  </div>\n  <footer class="panel-footer" ng-if="conversationController.isShowMessageReplyArea && !conversationController.isViewMode">\n    <div class="send-wrapper">\n      \x3c!-- htmlhint:analytics-id:disable --\x3e\n      <button bb-translate\n              class="button"\n              id="send-button"\n              ng-click="conversationController.onSendButtonClicked()"\n              ng-disabled="!conversationController.isSendButtonEnabled"\n              analytics-id="components.directives.messages.courseConversation.sendMessage.button">\n        components.directives.message.send\n      </button>\n      \x3c!-- htmlhint:analytics-id:enable --\x3e\n    </div>\n  </footer>\n</div>\n'},QoHD:function(e,t,s){"use strict";s("st/R");var i=s("WyD7"),n=s("lIb/"),a=s("PdQf"),r=s("tqR7"),o=s("Llzl");const c="ultra.components.directives.participants.validateParticipantsInput";class l{constructor(e){this.$injector=e,this.restrict="A",this.require="^ngModel",this.scope={bbSearchParamResults:"&",bbDisplayParticipantsList:"&?"},this.link=(e,t,s,i)=>{t.on("focusout",(t=>{const s=e.bbSearchParamResults(),n=e.bbDisplayParticipantsList&&e.bbDisplayParticipantsList(),a=s>0&&!i.$viewValue&&n,r=!(s&&n||i.$viewValue&&0!==i.$viewValue.length);return a||r||s?(i.$setValidity("bbValidateParticipantsInput",!0),t):(i.$setValidity("bbValidateParticipantsInput",!1),t)})),t.on("focusin",(()=>{i.$setValidity("bbValidateParticipantsInput",!0)}))}}}l.$inject=["$injector"],o.module(c,[]).directive("bbValidateParticipantsInput",["$injector",e=>e.instantiate(l)]);var h=s("Qbdf"),p=s("+4Px"),d=s("0JpG"),u=s("pjml"),m=s("lEL+"),v=s("dkZ2"),g=s("GbAM"),b=s("fYJU"),f=s("jhBu"),P=s("Sa5G");s.d(t,"a",(function(){return w}));const w="ultra.directives.participants";class C{constructor(){this.resultsMembership={}}}class y{constructor(e,t,s,i,n,r,o,c,l,h){if(this.scope=e,this.$rootScope=t,this.element=s,this.CourseModel=i,this.UserModel=n,this.contextCourse=r,this.bbLocalize=o,this.timeout=c,this.contextUser=l,this.entitlementService=h,this.searchParam=new C,this.excludeMe=!0,this.showParticipantList=!1,this.showMoreParticipants=!1,this.showParticipantInputBox=!0,this.isExpandingMoreParticipants=!1,this.enableParticipantsRequired=!1,this.isKeyboardMore=!1,this.alertMessageText="",this.auxSearchValue="",this.specialDummyParticipants=new Map,this.getExcludeRoleBucket=()=>{if(this.isAMultiUserMessage()&&!this.scope.includeAllMembers){const e=[];return this.scope.includeAllInstructors&&e.push(this.extractRole(a.b())),this.scope.includeAllStudents&&e.push(this.extractRole(a.e())),{excludeRoleBucket:e.join(",")}}return{}},this.extractRole=e=>{const[,t]=e.split(":");return t},this.participants=e.participants,null!=e.excludeMe&&(this.excludeMe=e.excludeMe),this.allMembers=a.c(),this.courseId)this.refresh();else{const t=e.$watch("courseId",(e=>{if(e){if(this.courseId=e,!this.courseId)return;this.refresh(),t()}}))}}isSelected(e){return!!this.scope.includeAllMembers||this.participants.some((t=>t.id===e))}isMyself(e){return this.contextUser.userId===e}identifyCourse(){return this.courseId=this.scope.courseId?this.scope.courseId:this.contextCourse.courseId,this.scope.course?this.scope.course.model.$asPromise():this.CourseModel.$find(this.courseId).$asPromise()}refresh(){this.identifyCourse().then((e=>{let t="components.directives.message.participant.";e.isOrganization&&(t="components.directives.message.organization.participant."),this.course=e,this.courseId=this.course.id,a.n.forEach((e=>{let s=null;switch(e){case a.a.AllCourseMembers:s=P.j.MessageAllMembersInCourse;break;case a.a.AllCourseStudents:s=P.j.MessageAllStudentsInCourse;break;case a.a.AllCourseInstructors:default:s=P.j.MessageAllActAsInstructorInCourse}this.entitlementService.hasCourseEntitlement(s,this.courseId).then((s=>{if(s){const s=a.g(this.scope,this.bbLocalize,t+e);this.specialDummyParticipants.set(e,s)}}))}))}))}navigateInDir(e,t){this.showParticipantList=!0,e.hasClass(".participant-entry")||this.element.find(".participant-entry:first").focus(),t?e.next():e.prev()}addParticipant(e){this.participants.indexOf(e)>=0||(this.enableParticipantsRequired=!1,a.i(e)&&(this.scope.includeAllMembers=!0,this.showParticipantInputBox=!1),a.h(e)&&(this.scope.includeAllInstructors=!0),a.j(e)&&(this.scope.includeAllStudents=!0),this.element.find(".participant-list-class").focus(),this.participants.push(e),this.showParticipantList=!1,this.searchParam.searchValue="",this.scope.onAddParticipant&&this.scope.onAddParticipant({user:e}),this.element.find(".tag-container").scrollTop(this.element.find(".tag-container").height()))}initSearch(){this.searchParam.results=[],this.searchParam.resultsMembership={},this.searchParam.count=0,this.addSpecialMembersToSearch()}addSpecialMembersToSearch(){this.searchParam.searchValue?this.specialDummyParticipants.forEach(((e,t)=>{this.isPartOfTheSearch(t,e)&&!this.isSelected(e.id)&&this.searchParam.results.push(e)})):this.specialDummyParticipants.forEach((e=>{this.isSelected(e.id)||this.searchParam.results.push(e)}))}excludeSpecialMembersFromCount(){var e;null===(e=this.searchParam.results)||void 0===e||e.forEach((e=>{a.k(e)&&(this.searchParam.count+=1)}))}isPartOfTheSearch(e,t){return a.l(e)&&t.givenName.toLocaleLowerCase().includes(this.searchParam.searchValue.toLocaleLowerCase())}getSearchResultsAlert(e){this.scope.alertMessageText=this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.scope),key:e?"components.directives.message.ariaLabel.resultsFound":"components.directives.message.participantValidation.errorName",noWrap:!0,noEscape:!0}),this.timeout((()=>{this.$rootScope.$broadcast(g.b,this.scope.alertMessageText)}),this.scope,1e3)}_searchParticipants(e){this.showParticipantList=!0;this.searchParam.results=[],this.searchParam.resultsMembership={},this.searchParam.count=0;const t=this.searchParam.searchValue;!this.searchParam.searchValue||this.searchParam.searchValue.length>=1?(this.timeout.cancel(this.searchParam.delayedSearch),this.searchParam.delayedSearch=this.timeout((()=>{if((void 0!==t||""!==this.searchParam.searchValue)&&t!==this.searchParam.searchValue)return;const s={q:this.searchParam.searchValue,limit:e,membershipAvailable:!0,includeMe:!0,sort:"role,user.familyName(asc),user.userName(asc)",fields:"id,isAvailable,role,user,courseRole",includeCount:!0,...this.getExcludeRoleBucket()};if(e){let t=0;this.scope.countParticipantsInConversation&&(t=this.scope.countParticipantsInConversation()),s.limit=e+t+this.participants.length}let i=0;this.CourseModel.$new(this.courseId).memberships.$refresh(s).$then((s=>{(void 0===t&&""===this.searchParam.searchValue||t===this.searchParam.searchValue)&&(this.initSearch(),s.forEach((e=>{this.scope.isExist({id:e.user.id})||this.isSelected(e.user.id)||!e.isAvailable?i+=1:(this.searchParam.results.push(e.user),this.searchParam.resultsMembership[e.user.id]=e)})),e&&this.searchParam.results.length>4&&(this.searchParam.results=this.searchParam.results.slice(0,4)),this.searchParam.count=s.paging.count-i,this.excludeSpecialMembersFromCount(),e&&this.checkWhetherToShowMoreParticipant(),this.getSearchResultsAlert(this.searchParam.count>0))}))}),this.scope,200)):this.searchParam.recentSearchValue&&(this.searchParam.recentSearchValue="")}handleUpAndDownArrow(e){this.showParticipantList||this.isSelected(a.c().id)||(this._searchParticipants(4),this.showParticipantList=!0);let t=angular.element(e.target);t.hasClass("participant-entry")?(t=e.keyCode===p.d?t.next():t.prev(),t.focus()):this.element.find(".participant-entry:first").focus(),e.preventDefault()}deleteParticipant(e){const t=this.participants.indexOf(e);t>=0&&this.participants.splice(t,1),a.i(e)&&(this.scope.includeAllMembers=!1,this.showParticipantInputBox=!0,this.timeout((()=>{this.element.find(".participant-list-class").focus()}),this.scope,0,!1)),a.h(e)&&(this.scope.includeAllInstructors=!1),a.j(e)&&(this.scope.includeAllStudents=!1),this.showParticipantList=!1,this.scope.onRemoveParticipant&&this.scope.onRemoveParticipant({user:e})}checkWhetherToShowMoreParticipant(){this.showMoreParticipants=this.searchParam.count>4}get leftParticipantCount(){return this.searchParam.results&&this.searchParam.count>4?this.searchParam.count-4:0}getIsExpandingMoreParticipants(){return this.isExpandingMoreParticipants}setIsExpandingMoreParticipants(e){return 4===e&&(this.isExpandingMoreParticipants=!1,!0)}continueToShowParticipant(e){return!(e>=4)||!this.showMoreParticipants}onShowMoreParticipants(e){this.enableParticipantsRequired=!1,this.showMoreParticipants=!1;angular.element(e.target).prev().focus(),this._searchParticipants(null),this.isExpandingMoreParticipants=!0}onShowMoreParticipantsEntryKeyDown(e){if(e.keyCode===p.u)this.showParticipantList=!1;else if(e.keyCode===p.v){angular.element(e.target).prev().focus()}else e.keyCode===p.g&&(this.showParticipantList=!1,this.element.find("input").focus(),e.stopPropagation(),e.preventDefault());this.isKeyboardMore=!0}onDeleteParticipant(e){this.deleteParticipant(e),this.markDirty(),this.element.find("[name=participantList]").focus()}onParticipantInputBoxKeyUp(e){e.keyCode===p.f?(this.showParticipantList=!1,e.preventDefault()):e.keyCode===p.d||e.keyCode===p.v?this.handleUpAndDownArrow(e):e.keyCode!==p.u&&e.keyCode!==p.g&&this._searchParticipants(4),this.onParticipantInputBoxKeyDown(e)}onParticipantInputBoxClick(){this.showParticipantList||this.isSelected(a.c().id)||this._searchParticipants(4)}onParticipantInputBoxKeyDown(e){e.keyCode!==p.g&&e.keyCode!==p.u||this.showParticipantList&&(this.showParticipantList=!1,e.stopPropagation(),e.preventDefault()),e.keyCode===p.a&&(0===this.auxSearchValue.length&&this.participants&&this.participants.length>0&&this.deleteParticipant(this.participants[this.participants.length-1]),this._searchParticipants(4)),this.auxSearchValue=this.searchParam.searchValue}isShowRoleInSearchResult(e){const t=this.searchParam.resultsMembership[e.id];return t&&!t.isStudentMembership()}getLocalizedRoleNameInSearchResult(e){if(this.searchParam.resultsMembership[e.id]){const t=this.searchParam.resultsMembership[e.id].courseRole;let s=u.w.toBeLocalizedRoleLabels;if(this.course.isOrganization&&(s=u.w.toBeLocalizedOrgRoleLabels),t){if(t.identifier.toString()in s)return"("+this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.scope),key:s[t.identifier.toString()]})+")";const e=this.course.isOrganization?"orgName":"courseName";return"("+(t[e].languageKey||t[e].rawValue)+")"}}}onParticipantEntrySelected(e){this.addParticipant(e)}onParticipantEntryKeyDown(e,t){e.keyCode===p.f||e.keyCode===p.t?(this.addParticipant(t),this.showParticipantList=!1):e.keyCode===p.d||e.keyCode===p.v?this.handleUpAndDownArrow(e):e.keyCode===p.u?this.showParticipantList=!1:e.keyCode===p.g&&(this.showParticipantList=!1,this.element.find("input").focus(),e.stopPropagation(),e.preventDefault())}onClickOutside(){!0===this.isExpandingMoreParticipants?this.showParticipantList=!0:this.showParticipantList=!1}checkRequireValidation(){this.participants.length>0||this.scope.joinedParticipantsNum&&this.scope.joinedParticipantsNum()>0||this.showParticipantList&&this.searchParam.results.length>0&&this.searchParam.searchValue&&this.searchParam.searchValue.length>0?this.enableParticipantsRequired=!1:this.enableParticipantsRequired=!0}recipientsListFocus(e){return!(!0!==this.getIsExpandingMoreParticipants()||!this.setIsExpandingMoreParticipants(e)||!this.isKeyboardMore)&&(this.isKeyboardMore=!1,!0)}showMoreButton(){return this.showMoreParticipants&&this.leftParticipantCount}participantListWasDisplayed(){return this.showParticipantList&&this.searchParam.results.length>0}markDirty(){const e="participantList";this.scope.participantsForm[e]&&this.scope.participantsForm[e].$setDirty(!0)}isAGroupMessage(){return this.isAMultiUserMessage()||!this.isAMultiUserMessage()&&!this.scope.isPrivateConversation()&&this.participants.length>1}isAMultiUserMessage(){return this.scope.includeAllMembers||this.scope.includeAllInstructors||this.scope.includeAllStudents}}y.$inject=["scope","$rootScope","element",u.m.serviceName,u.Jb.serviceName,h.e,d.serviceName,m.b,b.b,f.b];class M{constructor(e){this.$injector=e,this.restrict="E",this.template=v,this.scope={courseId:"@",participants:"=",excludeMe:"=?",includeAllMembers:"=?",showParticipantInputBox:"=?",showParticipantInputBoxSpinner:"=?",isExist:"&",countParticipantsInConversation:"&?",onAddParticipant:"&?",onRemoveParticipant:"&?",joinedParticipantsNum:"&?",participantsForm:"=?",isPrivateConversation:"&"},this.link=(e,t)=>{e.participantsController=this.$injector.instantiate(y,{scope:e,element:t})}}}M.$inject=["$injector"],angular.module(w,[u.N,r.a,c,h.b,d.moduleName,m.a,i.a,n.a]).directive("bbParticipants",["$injector",e=>e.instantiate(M)])},SHbF:function(e,t,s){var i=s("ziER"),n=s("5JeM"),a=new i({id:"icon-medium-attention",use:"icon-medium-attention-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-attention"><circle cx="12" cy="12" r="11" stroke-width="2" /><path d="M12.75 18.5a.75.75 0 11-1.5 0 .75.75 0 011.5 0z" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" /><path d="M12 15l-.5-10h1L12 15z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});n.add(a);e.exports=a},XQF1:function(e,t,s){"use strict";s.d(t,"a",(function(){return l}));var i=s("nsO7"),n=s("Llzl"),a=s("0JpG"),r=s("PdQf"),o=s("jbaE"),c=s("n7pY");const l="ultra.directives.bbCourseMessageContent";class h{constructor(e,t,s){this.$q=e,this.bbLocalize=t,this.$sce=s,this.scope={message:"=",participants:"=?",isOrganization:"="},this.restrict="E",this.template=c,this.link=(e,t,s)=>{const o=()=>{const t=e.message,s=e.participants,i=n.fromJson(t.body.rawText);if(i.sender)if(i.isBroadcast||i.includesAllMembers)this.bbLocalize.loadBundle("components/directives/messages").then((()=>{e.displayText=this.$sce.trustAsHtml(this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(e),key:"components.directives.message.messageAfterAddingWholeClass"})).$$unwrapTrustedValue()}));else if(i.participants||i.recipientCategory){const t=[];if(null==s[i.sender])return;if(i.participants)for(let e=0;e<i.participants.length;e++){null==s[i.participants[e]]||i.ignoredUsersToSystemMessage&&i.ignoredUsersToSystemMessage.includes(i.participants[e])||t.push(s[i.participants[e]])}if(i.recipientCategory){const s=e.isOrganization?"components.directives.message.organization.participant.":"components.directives.message.participant.";i.recipientCategory.forEach((i=>{const n=r.g(e,this.bbLocalize,s+r.f(i));t.unshift(n)}))}if(0===t.length)return;const n=[];n.push(this.bbLocalize.formatUsername(s[i.sender],a.ILocaleUsernameFormat.Short,e,{noWrap:!0,noEscape:!0})),n.push(this.bbLocalize.formatUsernameList(t,null,e,{noWrap:!0})),this.$q.all(n).then((t=>{e.displayText=this.$sce.trustAsHtml(this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(e),key:"components.directives.message.messageAfterAddingParticipants",params:{sender:t[0],participants:t[1]},noWrap:!0,noEscape:!0})).$$unwrapTrustedValue()}))}},c=e.message;if(null!=c)if(c.isSystemMessage()){const t=e.$watchCollection("participants",(()=>{const s=e.participants;null!=s&&0!==i.size(s)&&(o(),t())}))}else e.displayText=this.$sce.trustAsHtml(c.body.displayText).$$unwrapTrustedValue();else e.displayText=""}}}h.$inject=["$q",a.serviceName,"$sce"],n.module(l,["ngSanitize",a.moduleName,o.a]).directive("bbCourseMessageContent",["$injector",e=>e.instantiate(h)])},dkZ2:function(e,t){e.exports='<ng-form\n  class="participants-wrapper"\n  name="participantsForm"\n  novalidate\n  bb-click-outside="participantsController.onClickOutside()"\n  is-active="true">\n  <div bb-load-bundle="components/directives/messages" class="tag-control-container">\n    <div class="guidance-wrapper" ng-show="participantsController.showParticipantInputBox">\n      <label for="participant-list" class="sr-only" bb-translate="components.directives.message.enterRecipientName"></label>\n      <input aria-describedby="requiredPrompt" type="text" id="participant-list" class="participant-list-class" ng-model="participantsController.searchParam.searchValue"\n             role="combobox"\n             aria-expanded="{{participantsController.participantListWasDisplayed()}}"\n             aria-haspopup="true"\n             aria-activedescendant="participant-0"\n             aria-autocomplete="inline"\n             autocomplete="off"\n             aria-owns="participant-autocomplete"\n             name="participantList"\n             ng-keyup="participantsController.onParticipantInputBoxKeyUp($event)"\n             ng-click="participantsController.onParticipantInputBoxClick($event)"\n             bb-translate-attrs="{\'placeholder\': \'components.directives.message.enterRecipientName\'}"\n             ng-blur="participantsController.checkRequireValidation()"\n             bb-validate-participants-input\n             bb-search-param-results="participantsController.searchParam.count"\n             ng-required="participantsController.enableParticipantsRequired"\n             ng-class="!!participantsController.searchParam.searchValue ? \'not-empty\' : \'empty\'"\n             bb-display-participants-list="participantsController.participantListWasDisplayed()"\n             analytics-id="components.directives.participants.paticipantList.input.text"/>\n      \x3c!--added this div to hold the place that prevent the error message cover the position of drop down menu--\x3e\n      <i class="icon-search"></i>\n      <span id="requiredPrompt" class="sr-only" bb-translate>components.directives.message.participantValidation.emptyParticipant</span>\n    </div>\n    <div class="tag-container"\n         ng-show="participantsController.participants.length > 0 || showParticipantInputBoxSpinner"\n         ng-class="{\'hide-border\': !participantsController.showParticipantInputBox, \'loading-participants\': showParticipantInputBoxSpinner}">\n         <bb-ui-circular-progress ng-if="showParticipantInputBoxSpinner" size="24"></bb-ui-circular-progress>\n        <span class="tag" ng-repeat="participant in participantsController.participants">\n          <span class="caption">\n            <bb-username user="participant" format="short" auto-update="true"></bb-username>\n          </span>\n          <button class="control clear"\n                  type="button"\n                  ng-click="participantsController.onDeleteParticipant(participant)"\n                  bb-translate-attrs="{\'aria-label\': \'components.directives.message.removeParticipant\'}"\n                  translate-attrs-values="{user: {givenName:participant.givenName, familyName:participant.familyName}}"\n                  analytics-id="components.directives.participants.paticipantList.removeParticipant.button">\n            <bb-svg-icon icon="clear" size="small"></bb-svg-icon>\n          </button>\n        </span>\n    </div>\n  </div>\n  <div class="recipient-validate" ng-if="!participantsController.showParticipantList">\n    <div bb-validation-messages for="participantList">\n      <span ng-message="required" class="recipients-error-message">\n        <bb-translate>components.directives.message.participantValidation.emptyParticipant</bb-translate>\n      </span>\n      <span ng-message="bbValidateParticipantsInput" class="recipients-error-message">\n        <bb-translate>components.directives.message.participantValidation.errorName</bb-translate>\n      </span>\n    </div>\n  </div>\n  <div class="participant-autocomplete adding" ng-if="participantsController.showParticipantList" role="listbox"\n       bb-translate-attrs="{\'aria-label\': \'components.directives.message.recipientsList\'}"\n       id="participant-autocomplete">\n    <div class="participant-entry" ng-repeat="user in participantsController.searchParam.results track by $index"\n         role="option" tabindex="-1"\n         aria-selected="false"\n         id="participant-{{$index}}"\n         ng-if="participantsController.continueToShowParticipant($index)"\n         ng-keydown="participantsController.onParticipantEntryKeyDown($event, user)"\n         bb-focus="participantsController.recipientsListFocus($index)"\n         data-user-id="{{::user.id}}"\n         analytics-id="components.directives.participants.participantEntry">\n      <div class="participant-controls"\n           ng-click="participantsController.onParticipantEntrySelected(user)"\n           role="button"\n           analytics-id="components.directives.participants.participantControls"></div>\n      <div class="participant-avatar">\n        <div class="element-image avatar">\n          <bb-avatar user="user" auto-update="true"></bb-avatar>\n        </div>\n      </div>\n      <div class="participant-info">\n        <span class="participant-name">\n          <bb-username user="user" format="short" auto-update="true" should-allow-label="true" show-pronouns="true" show-pronunciation="true"></bb-username>\n          <div class="userId ellipse" ng-if="user.userName && !user.studentId" title="{{user.userName}}" aria-hidden="true">{{user.userName}}</div>\n          <div class="userId ellipse" ng-if="!user.userName && user.studentId" title="{{user.userName}}" bb-translate translate-values="{ studentId: user.studentId }">components.directives.usercard.studentId</div>\n          <div class="userId ellipse" ng-if="user.userName && user.studentId" title="{{user.userName}}" bb-translate translate-values="{ username: user.userName, studentId: user.studentId }">components.directives.usercard.usernameAndId</div>\n        </span>\n        <span class="participant-role">\n          <span ng-show="participantsController.isShowRoleInSearchResult(user)" class="role">{{participantsController.getLocalizedRoleNameInSearchResult(user)}}</span>\n        </span>\n      </div>\n    </div>\n    \x3c!-- htmlhint:analytics-id:disable --\x3e\n    <button class="search-more button-anchor" ng-if="participantsController.showMoreButton()"\n            role="option" tabindex="0"\n            bb-translate="components.directives.message.moreParticipants.plural"\n            translate-values="{count: participantsController.leftParticipantCount}"\n            ng-click="participantsController.onShowMoreParticipants($event)"\n            ng-keydown="participantsController.onShowMoreParticipantsEntryKeyDown($event)"\n            analytics-id="components.directives.participants.paticipantList.showMore.button">\n    </button>\n    \x3c!-- htmlhint:analytics-id:enable --\x3e\n  </div>\n\n  <div class="group-message-helper" ng-if="participantsController.isAGroupMessage()">\n    <bb-ui-icon-small-information class="helper-information-icon"></bb-ui-icon-small-information>\n    <span bb-translate>components.directives.message.groupMessage</span>\n  </div>\n</ng-form>\n'},"lIb/":function(e,t,s){"use strict";s.d(t,"a",(function(){return r}));var i=s("Llzl"),n=s("1ZbL"),a=s("tN4z");const r="ultra.components.directives.bb-ui-circular-progress",o={Class:a.AnalyticsCircularProgress,bindingNames:["id","error","formatPercentage","label","labelProps","showPercent","success","color","disableShrink","size","thickness","value","variant"]};i.module(r,[]).component("bbUiCircularProgress",Object(n.a)(o))},n7pY:function(e,t){e.exports='<div class="message-content" ng-class="{\'system-message\': message.isSystemMessage(), \'normal-message\': !message.isSystemMessage()}">\n    <bb-rich-text-editor ng-model="displayText"\n                         is-read-only="true"\n                         plugin-options="{\'attachment\': true}"\n    />\n</div>\n'},s5UK:function(e,t,s){var i=s("ziER"),n=s("5JeM"),a=new i({id:"icon-small-arrow-left",use:"icon-small-arrow-left-usage",viewBox:"0 0 16 16",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="icon-small-arrow-left"><path d="M11 1L4 8l7 7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});n.add(a);e.exports=a},sTfY:function(e,t,s){var i=s("ziER"),n=s("5JeM"),a=new i({id:"icon-medium-arrow-left",use:"icon-medium-arrow-left-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-arrow-left"><path d="M17 1L7 12l10 11" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});n.add(a);e.exports=a},"st/R":function(e,t,s){var i=s("ziER"),n=s("5JeM"),a=new i({id:"icon-small-clear",use:"icon-small-clear-usage",viewBox:"0 0 16 16",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="icon-small-clear"><path d="M1 8c0-3.866 3.134-7 7-7v0c3.866 0 7 3.134 7 7v0c0 3.866-3.134 7-7 7v0c-3.866 0-7-3.134-7-7v0zM10 6l-4 4M6 6l4 4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});n.add(a);e.exports=a}}]);