(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"6TNA":function(e,s){e.exports='<span class="schema-grade">{{displayGrade.fullDisplayGrade}}</span>\n'},O3Pz:function(e,s){e.exports='<div class="grade-callout-wrapper">\n  <div class="grade-callout readonly {{displayGrade.getCourseColorClass()}}"\n       ng-class="{ \'pending\': displayGrade.attempt.isNeedsGrading() }"\n       bb-load-bundle="components/directives/grade/display-grade"\n       bb-click-to-invoke-child="a.bb-click-grade-target">\n    <span class="value" bb-translate>{{displayGrade.attemptStatus}}</span>\n  </div>\n</div>\n'},S6sW:function(e,s){e.exports='<ng-switch on="displayGrade.shouldShowPointsPossible()">\n  <span ng-switch-when="true" ng-bind-html="displayGrade.fullDisplayGrade"></span>\n  <span ng-switch-default><strong>{{displayGrade.fullDisplayGrade}}</strong></span>\n</ng-switch>'},"cH+F":function(e,s){e.exports='<div class="grade-callout-wrapper">\n  <div class="grade-callout readonly {{displayGrade.colorClass || \'na\'}} overall-grade"\n       bb-load-bundle="components/directives/grade/display-grade"\n       bb-click-to-invoke-child="a.bb-click-grade-target"\n       ng-class="{\'defaultCursor\': displayGrade.cursorDefault}">\n    <span ng-if="!displayGrade.noGradeToDisplay()" class="sr-only" bb-translate>{{displayGrade.gradeDisplayItem.perfCodeDesc || translateKey}}</span>\n    <span ng-if="!overallGradePeekSref" class="value">{{displayGrade.fullDisplayGrade}}</span>\n    <a class="overall-grade value" \n       ng-if="overallGradePeekSref" \n       bb-peek-sref="{{overallGradePeekSref}}"\n       analytics-id="components.directives.grade.display-grade.overallGrade.link">\n      {{displayGrade.fullDisplayGrade}}\n    </a>  \n  </div>\n</div>\n'},dJ97:function(e,s,a){"use strict";a("w0/N");var i=a("Llzl"),t=a("Fvsw"),l=a("yMoE"),r=a("X/qj"),d=a("oi1r"),o=a("o5Lu"),n=a("0JpG"),p=a("fYJU"),c=a("zGdY"),u=a("d8yC"),h=a("O3Pz"),y=a("cH+F"),g=a("6TNA"),G=(a("S6sW"),a("pHHL"));a.d(s,"a",(function(){return m}));const m="ultra.grade.display";var b;!function(e){e.AttemptStatus="AttemptStatus",e.FinalBase="FinalBase",e.Column="Column",e.Course="Course",e.GradeColor="GradeColor"}(b||(b={}));class v{constructor(e,s,a,t,r,d,o,n,p,c){this.scope=e,this.attrs=s,this.$q=a,this.$injector=t,this.gradebookPermissionService=d,this.localize=o,this.context=n,this.schemaService=p,this.contextUser=c,this.fullDisplayGrade=v.NO_GRADE_DISPLAY,this.bundlePromise=o.loadBundle("components/directives/grade/display-grade"),this.courseColorClass=e.courseColorClass,this.cursorPointer=e.cursorPointer&&e.cursorPointer(),this.cursorDefault=e.cursorDefault&&e.cursorDefault(),this.isStudent=c.userModel.isStudent(),this.isStudent||d.canViewGrades(this.scope.course&&this.scope.course().id)?(this.scope.$watch("::column",(e=>{if(e){const s=e=>{let s;const a=this.scope.$watch("gradeDetail",(i=>{i&&(this.schemaGrade=r.getGradeToDisplay(i.displayGrade,this.scope,this.schema.scaleType),this.setFullDisplayGrade(),b.GradeColor!==this.scope.gradeType&&b.FinalBase!==this.scope.gradeType||(this.gradeDisplayItem=t.instantiate(l.a,{gradeDetail:i,scope:this.scope}),this.scope.$watch("::column",(s=>{s&&this.gradeDisplayItem.init(s,e).then((()=>{this.gradeDisplayItem.displayGrade=this.scope.showNotGraded&&this.scope.showNotGraded()?null:i.displayGrade,this.gradeDisplayItem.displayValue&&(this.colorClass=this.gradeDisplayItem.getGradeColor())}))}))),a(),s())}));s=this.scope.$watch("summary",(e=>{var s,t;if(this.colorClass="na",e){if(this.schemaGrade=e.averageGradeForStudentsSchemaValue,this.schemaGradeValue=e.averageGradeForStudents,this.setFullDisplayGrade(),b.FinalBase===this.scope.gradeType&&!i.isUndefined(e.averageGradeForStudents)){const a=u.b(null!==(t=null===(s=this.scope.gradeDetail)||void 0===s?void 0:s.pointsPossible)&&void 0!==t?t:this.scope.column.possible,2);this.colorClass=r.getPercentileColor(r.pointToPercentage(e.averageGradeForStudents,a))}a()}}),!0)};this.scope.schema?(this.schema=this.scope.schema,s(this.scope.schema)):p.loadGradeSchema(e).then((e=>{this.schema=e,s()}))}})),b.AttemptStatus===this.scope.displayType&&(this.courseColorClass="na",this.attempt?this.attempt.isNeedsGrading()?this.attemptStatus="components.directives.grade.display-grade.pending-grade":this.attempt.isInProgress()&&(this.attemptStatus="components.directives.grade.display-grade.NA"):this.attemptStatus="components.directives.grade.display-grade.NA")):(this.fullDisplayGrade=this.attemptStatus=v.NO_GRADE_DISPLAY,this.colorClass="na")}setFullDisplayGrade(){var e;let s;if(this.schema&&this.schema.scaleType&&(this.schema.scaleType===c.Zb.Tabular||this.schema.scaleType===c.Zb.Text||this.schema.scaleType===c.Zb.Complete))this.fullDisplayGrade=this.scope.showNotGraded&&this.scope.showNotGraded()?v.NO_GRADE_DISPLAY:this.schemaGrade||v.NO_GRADE_DISPLAY;else if(s=this.scope.showNotGraded&&this.scope.showNotGraded()?v.NO_GRADE_DISPLAY:this.getSchemaGrade(),this.shouldShowPointsPossible()){let e="components.directives.grade.display-grade.";e+=b.Course===this.scope.gradeType?"course-score":"score",this.bundlePromise.then((()=>{var a;this.fullDisplayGrade=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:e,params:{grade:s,possible:u.b(null!==(a=this.scope.gradeDetail&&this.scope.gradeDetail.pointsPossible)&&void 0!==a?a:this.scope.column.possible,2)},noWrap:!0,noEscape:!0})}))}else(null===(e=this.schema)||void 0===e?void 0:e.scaleType)===c.Zb.Percent&&s!==v.NO_GRADE_DISPLAY?this.bundlePromise.then((()=>{this.fullDisplayGrade=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"components.directives.grade.display-grade.percent",params:{grade:s},noWrap:!0,noEscape:!0})})):this.fullDisplayGrade=s}get attempt(){return this.scope.attempt&&this.scope.attempt()||this.scope.gradeDetail&&(this.scope.gradeDetail.ui.groupAttempt||this.scope.gradeDetail.ui.attempt)}convertGrade(e){try{const s=e.replace(/[^0-9.,]/g,"");return this.localize.parseNumberSync(s)}catch(e){return null}}getSchemaGrade(){let e;return e=null==this.schemaGradeValue?this.convertGrade(this.schemaGrade):u.b(this.schemaGradeValue,2),null!=e&&this.localize.formatNumberSync(e,this.scope,{maximumFractionDigits:o.e.DEFAULT_GRADEBOOK_SETTINGS_AFTER_DECIMAL})||v.NO_GRADE_DISPLAY}shouldShowPointsPossible(){var e;return(null===(e=this.schema)||void 0===e?void 0:e.scaleType)===c.Zb.Score&&(c.p.NonCalculated===this.scope.column.calculationType||this.scope.gradeDetail&&this.scope.gradeDetail.pointsPossible>0||this.scope.column.possible>0)}getCourseColorClass(){return this.courseColorClass}noGradeToDisplay(){return this.fullDisplayGrade===v.NO_GRADE_DISPLAY}getNoGradeDisplay(){return v.NO_GRADE_DISPLAY}shouldShowRubricButton(){return this.scope.showRubricButton&&this.scope.showRubricButton()&&this.scope.column.hasRubricAssociation&&this.scope.column.hasRubricAssociation()}shouldShowRubricDiv(){return this.scope.showRubricDiv&&this.scope.showRubricDiv()&&this.scope.column.hasRubricAssociation&&this.scope.column.hasRubricAssociation()}shouldShowRubricEvaluation(){return this.scope.column.hasRubricAssociation&&this.scope.column.hasRubricAssociation()&&null!=this.attempt&&this.attempt.isCompleted()&&!this.scope.gradeDetail.isOverrideGrade()}}v.NO_GRADE_DISPLAY="--",v.$inject=["scope","attrs","$q","$injector",o.n,r.b,n.serviceName,t.b,d.b,p.b];class D{constructor(e,s){this.$injector=e,this.$compile=s,this.restrict="E",this.scope={attempt:"&?",gradeDetail:"=",summary:"=",column:"=",schema:"=?",displayType:"@",finalGrade:"&?",translateKey:"@",courseColorClass:"=",isGroupGradeMultiple:"&?",showNotGraded:"&?",overallGradePeekSref:"@?",showRubricButton:"&?",showRubricDiv:"&?",cursorPointer:"&?",cursorDefault:"&?",course:"&?"},this.link=(e,s,a)=>{e.displayGrade=this.$injector.instantiate(v,{scope:e,attrs:a}),e.gradeType=function(e){if(e)return Object.values(b).find((s=>s.toLowerCase()===e.toLowerCase()))}(e.displayType)||b.Column,s.append(this.$compile(function(e){switch(e){case b.AttemptStatus:return h;case b.FinalBase:return y;case b.Column:return g;case b.GradeColor:return G}}(e.gradeType))(e))}}}D.$inject=["$injector","$compile"],i.module(m,[o.m,r.a]).directive("bbDisplayGrade",["$injector",e=>e.instantiate(D)])},pHHL:function(e,s){e.exports='<div class="grade-color">\n  <div ng-if="!displayGrade.shouldShowRubricButton() && !displayGrade.shouldShowRubricDiv()">\n    <div ng-if="!(isGroupGradeMultiple() && !showNotGraded())"\n         ng-class="{ \'show-total\': displayGrade.gradeDisplayItem.shouldShowTotalPoints(),\n                     \'final-grade\': finalGrade(),\n                     \'na\': displayGrade.gradeDisplayItem.displayValue == null,\n                     \'cursor-pointer\': displayGrade.cursorPointer,\n                     \'defaultCursor\': displayGrade.cursorDefault}"\n         class="wrapping-input-style {{displayGrade.colorClass}}"\n         ready="{{::displayGrade.fullDisplayGrade && !displayGrade.noGradeToDisplay() || undefined}}">\n      <ng-switch on="displayGrade.schema.scaleType">\n        <span ng-switch-default>\n          <span ng-if="displayGrade.fullDisplayGrade != null && !overallGradePeekSref" class="grade-input-display ready" bb-translate-attrs="{ title: \'{{displayGrade.gradeDisplayItem.perfCodeDesc || translateKey}}\'}">{{displayGrade.fullDisplayGrade}}</span>\n          <a ng-if="displayGrade.fullDisplayGrade != null && overallGradePeekSref" \n             class="grade-input-display ready" \n             bb-peek-sref="{{overallGradePeekSref}}" \n             bb-translate-attrs="{ title: \'{{displayGrade.gradeDisplayItem.perfCodeDesc || translateKey}}\'}"\n             analytics-id="components.directives.grade.display-grade.scale.fullDisplayGrade.link">\n            {{displayGrade.fullDisplayGrade}}\n          </a>\n          <span ng-if="displayGrade.fullDisplayGrade == null && !overallGradePeekSref" class="grade-input-display" bb-translate-attrs="{ title: \'{{displayGrade.gradeDisplayItem.perfCodeDesc || translateKey}}\'}">{{::displayGrade.getNoGradeDisplay()}}</span>\n          <a ng-if="displayGrade.fullDisplayGrade == null && overallGradePeekSref" \n             class="grade-input-display" \n             bb-peek-sref="{{overallGradePeekSref}}" \n             bb-translate-attrs="{ title: \'{{displayGrade.gradeDisplayItem.perfCodeDesc || translateKey}}\'}"\n             analytics-id="components.directives.grade.display-grade.scale.getNoGradeDisplay.link">\n            {{::displayGrade.getNoGradeDisplay()}}\n          </a>\n        </span>\n        <span ng-switch-when="SCORE">\n          \x3c!-- Accommodate for hiding of points possible in small format --\x3e\n          <span ng-if="displayGrade.gradeDisplayItem.displayValue != null && !overallGradePeekSref" class="grade-input-display ready">{{displayGrade.gradeDisplayItem.displayValue}}</span>\n          <a ng-if="displayGrade.gradeDisplayItem.displayValue != null && overallGradePeekSref" \n             class="grade-input-display ready" \n             bb-peek-sref="{{overallGradePeekSref}}"\n             analytics-id="components.directives.grade.display-grade.score.fullDisplayGrade.link">\n            {{displayGrade.gradeDisplayItem.displayValue}}\n          </a>\n          <span ng-if="displayGrade.gradeDisplayItem.displayValue == null && !overallGradePeekSref" class="grade-input-display">{{::displayGrade.getNoGradeDisplay()}}</span>\n          <a ng-if="displayGrade.gradeDisplayItem.displayValue == null && overallGradePeekSref" \n             class="grade-input-display" \n             bb-peek-sref="{{overallGradePeekSref}}"\n             analytics-id="components.directives.grade.display-grade.score.getNoGradeDisplay.link">\n            {{::displayGrade.getNoGradeDisplay()}}\n          </a>\n          <span ng-if="displayGrade.shouldShowPointsPossible()" class="points-text" bb-translate translate-values="{total: gradeDetail.pointsPossible || column.possible}">components.directives.grade.display-grade.points</span>\n        </span>\n      </ng-switch>\n    </div>\n    <div ng-if="isGroupGradeMultiple() && !showNotGraded()" class="wrapping-input-style is-multiple">\n      <div ng-if="overallGradePeekSref" class="group-multiple" bb-peek-sref="{{overallGradePeekSref}}" bb-translate>components.directives.grade.display-grade.multiple</div>\n      <div ng-if="!overallGradePeekSref" class="group-multiple" bb-translate>components.directives.grade.display-grade.multiple</div>\n    </div>\n  </div>\n  <div ng-if="displayGrade.shouldShowRubricButton()">\n    <a ng-if="!displayGrade.shouldShowRubricEvaluation()"\n       bb-peek-sref="rubric-view"\n       class="js-rubric-view wrapping-input-style clear cursor-pointer"\n       ng-class="displayGrade.colorClass"\n       analytics-id="components.directives.grade.display-grade.rubric.link">\n      <span>\n        <bb-svg-icon size="small" icon="rubric"></bb-svg-icon>\n        <span class="grade-input-display ready" ng-if="displayGrade.gradeDisplayItem.displayValue != null">{{displayGrade.gradeDisplayItem.displayValue}}&nbsp</span>\n        <span class="grade-input-display ready" ng-if="displayGrade.gradeDisplayItem.displayValue == null">{{::displayGrade.getNoGradeDisplay()}}</span>&nbsp;\n        <span ng-if="displayGrade.shouldShowPointsPossible()" class="points-text" bb-translate translate-values="{total: gradeDetail.pointsPossible || column.possible}">components.directives.grade.display-grade.points</span>\n      </span>\n    </a>\n    <a ng-if="displayGrade.shouldShowRubricEvaluation()"\n       bb-peek-sref="rubric-evaluation({groupId: displayGrade.attempt.groupId})"\n       class="js-rubric-evaluation wrapping-input-style clear cursor-pointer"\n       ng-class="displayGrade.colorClass"\n       analytics-id="components.directives.grade.display-grade.rubricEvaluation.link">\n      <span>\n        <bb-svg-icon size="small" icon="rubric"></bb-svg-icon>\n        <span class="grade-input-display ready" ng-if="displayGrade.gradeDisplayItem.displayValue != null">{{displayGrade.gradeDisplayItem.displayValue}}&nbsp</span>\n        <span class="grade-input-display ready" ng-if="displayGrade.gradeDisplayItem.displayValue == null">{{::displayGrade.getNoGradeDisplay()}}&nbsp</span>&nbsp;\n        <span ng-if="displayGrade.shouldShowPointsPossible()" class="points-text" bb-translate translate-values="{total: gradeDetail.pointsPossible || column.possible}">components.directives.grade.display-grade.points</span>\n      </span>\n    </a>\n  </div>\n  <div ng-if="displayGrade.shouldShowRubricDiv() && displayGrade.shouldShowRubricEvaluation()"\n       class="wrapping-input-style clear"\n       ng-class="displayGrade.colorClass">\n    <span>\n      <bb-svg-icon size="small" icon="rubric"></bb-svg-icon>\n      <span class="grade-input-display ready" ng-if="displayGrade.gradeDisplayItem.displayValue != null">{{displayGrade.gradeDisplayItem.displayValue}}</span>\n      <span class="grade-input-display ready" ng-if="displayGrade.gradeDisplayItem.displayValue == null">{{::displayGrade.getNoGradeDisplay()}}</span>&nbsp;\n      <span ng-if="displayGrade.shouldShowPointsPossible()" class="points-text" bb-translate translate-values="{total: gradeDetail.pointsPossible || column.possible}">components.directives.grade.display-grade.points</span>\n    </span>\n  </div>\n</div>'},"w0/N":function(e,s,a){var i=a("ziER"),t=a("5JeM"),l=new i({id:"icon-small-rubric",use:"icon-small-rubric-usage",viewBox:"0 0 16 16",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="icon-small-rubric"><path d="M11 12h4v3h-4v-3zM4 12h4v3H4v-3zM1 12v3M1 5v3M11 5h4v3h-4V5zM4 5h4v3H4V5zM8 1H4M15 1h-4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});t.add(l);e.exports=l},yMoE:function(e,s,a){"use strict";a.d(s,"a",(function(){return r}));var i=a("oi1r"),t=a("o5Lu"),l=a("zGdY");class r{constructor(e,s,a,i,t){this.grade=e,this.$q=s,this._gradeDetail=a,this.scope=i,this.schemaService=t,this.wasValueErased=!1}init(e,s){this.column=e;const a=e=>{this.schema=e,this.scaleType=null==e?void 0:e.scaleType};return s?this.$q.when(a(s)):this.schemaService.loadGradeSchema(e).then((e=>{a(e)}))}shouldShowTotalPoints(){var e,s;return(null!=this._displayValue||(null===(e=this.schema)||void 0===e?void 0:e.scaleType)===l.Zb.Score)&&((null===(s=this.schema)||void 0===s?void 0:s.scaleType)===l.Zb.Score&&!this.isDisplayValueTooLargeForTotalPoints())}isDisplayValueTooLargeForTotalPoints(){return this._displayValue&&this._displayValue.toString().length>t.h.DEFAULT_GRADEBOOK_SETTINGS_BEFORE_DECIMAL+t.h.DEFAULT_GRADEBOOK_SETTINGS_AFTER_DECIMAL+2}set displayGrade(e){var s,a;if(e){if(this.displayValue=this.grade.getGradeToDisplay(e,this.scope,null===(s=this.schema)||void 0===s?void 0:s.scaleType),this._nonFormattedScore=e.score,this._perfCode=e.perfCode,this._perfCode)return this.perfCodeDesc=this._perfCode.description,void(this._parsedValue=this.grade.getGradeToDisplay({perfCode:this._perfCode},this.scope,l.Zb.Score));switch(this.perfCodeDesc="",null===(a=this.schema)||void 0===a?void 0:a.scaleType){case l.Zb.Tabular:{let e=null;if(this.column.externalGrade&&this.gradeDetail&&this.gradeDetail.isOverrideGrade()){const s=this.gradeDetail.pointsPossible||this.column.possible||100;e={score:this._nonFormattedScore&&this._nonFormattedScore*s/100}}else e={score:this._nonFormattedScore};this._parsedValue=this.grade.getGradeToDisplay(e,this.scope,l.Zb.Score);break}case l.Zb.Percent:{let e=null;if(this.column.externalGrade)e={score:this._nonFormattedScore};else{e={score:this._nonFormattedScore&&this._nonFormattedScore/100*this.column.possible}}this._parsedValue=this.grade.getGradeToDisplay(e,this.scope,l.Zb.Score);break}case l.Zb.Score:this._parsedValue=this.displayValue;break;case l.Zb.Complete:this._parsedValue=this.grade.getGradeToDisplay({...e,grade:null},this.scope,this.schema.scaleType);break;case l.Zb.Text:this._parsedValue=e.grade}}}get displayValue(){return this._displayValue}set displayValue(e){this.wasValueErased=this.grade.wasGradeCleared(this.displayValue,e),this._displayValue=e}get parsedValue(){return this._parsedValue}set parsedValue(e){this._parsedValue=e}get gradeDetail(){return this._gradeDetail}set gradeDetail(e){this._gradeDetail=e}hasPerfCode(){return!!this._perfCode}getGradeColor(){var e,s,a;return(null===(s=null===(e=this.gradeDetail)||void 0===e?void 0:e.displayGrade)||void 0===s?void 0:s.isOverride)&&this.column.externalGrade||this.scaleType===l.Zb.Text||(null===(a=this.gradeDetail)||void 0===a?void 0:a.isExempt)?"gray":this.displayValue?this.scaleType!==l.Zb.Percent?this.getGradeColorScoreSchema():this.grade.getPercentileColor(this._nonFormattedScore):void 0}getGradeColorScoreSchema(){const e=this.gradeDetail?this.gradeDetail.pointsPossible:this.column.possible;if(e>0){const s=this._nonFormattedScore/e*100;return this.grade.getPercentileColor(s)}return"na"}}r.$inject=[t.n,"$q","gradeDetail","scope",i.b]}}]);